// frontend/src/components/footer.jsx
import React from "react";
import { Facebook, Twitter, Linkedin } from "lucide-react";

const Footer = () => {
  return (
    <footer className="bg-gray-900 text-gray-300 py-12">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
          {/* Logo & Socials */}
          <div>
            <div className="flex items-center space-x-2 mb-4">
              <div className="text-2xl">üèõÔ∏è</div>
              <span className="text-lg font-bold text-white">
                Conference 2025
              </span>
            </div>
            <p className="text-gray-400 text-sm mb-4">
              N·ªÅn t·∫£ng qu·∫£n l√Ω h·ªôi ngh·ªã khoa h·ªçc h√†ng ƒë·∫ßu Vi·ªát Nam
            </p>
            <div className="flex space-x-4">
              <a
                href="#"
                className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center hover:bg-blue-700 transition-colors"
              >
                <Facebook className="w-4 h-4 text-white" />
              </a>
              <a
                href="#"
                className="w-8 h-8 bg-sky-400 rounded-full flex items-center justify-center hover:bg-sky-500 transition-colors"
              >
                <Twitter className="w-4 h-4 text-white" />
              </a>
              <a
                href="#"
                className="w-8 h-8 bg-blue-700 rounded-full flex items-center justify-center hover:bg-blue-800 transition-colors"
              >
                <Linkedin className="w-4 h-4 text-white" />
              </a>
            </div>
          </div>

          {/* Conference Links */}
          <div>
            <h4 className="text-white font-semibold mb-4">H·ªôi ngh·ªã</h4>
            <ul className="space-y-2 text-sm">
              <li>
                <a href="#" className="hover:text-white transition-colors">
                  Gi·ªõi thi·ªáu
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition-colors">
                  L·ªãch tr√¨nh
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition-colors">
                  Di·ªÖn gi·∫£
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition-colors">
                  ƒê·ªãa ƒëi·ªÉm
                </a>
              </li>
            </ul>
          </div>

          {/* Author Links */}
          <div>
            <h4 className="text-white font-semibold mb-4">T√°c gi·∫£</h4>
            <ul className="space-y-2 text-sm">
              <li>
                <a href="#" className="hover:text-white transition-colors">
                  H∆∞·ªõng d·∫´n n·ªôp b√†i
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition-colors">
                  Template
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition-colors">
                  Ti√™u ch√≠ ƒë√°nh gi√°
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition-colors">
                  H·∫°n n·ªôp b√†i
                </a>
              </li>
            </ul>
          </div>

          {/* Contact */}
          <div>
            <h4 className="text-white font-semibold mb-4">Li√™n h·ªá</h4>
            <ul className="space-y-2 text-sm">
              <li className="flex items-center space-x-2">
                <span>üìß</span>
                <span>conference@university.edu.vn</span>
              </li>
              <li className="flex items-center space-x-2">
                <span>üìû</span>
                <span>+84 28 1234 5678</span>
              </li>
              <li className="flex items-center space-x-2">
                <span>üìç</span>
                <span>TP. H·ªì Ch√≠ Minh, Vi·ªát Nam</span>
              </li>
            </ul>
          </div>
        </div>

        <div className="border-t border-gray-800 mt-8 pt-8 text-center text-sm text-gray-400">
          <p>&copy; 2025 H·ªôi Ngh·ªã Khoa H·ªçc Qu·ªëc T·∫ø. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;

// frontend/src/components/navbar.jsx
import React, { useState } from "react";
import { Menu, X } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Link } from "react-router-dom";

const Navbar = () => {
  const [open, setOpen] = useState(false);

  const navItems = [
    { label: "T·ªïng quan", href: "#" },
    { label: "L·ªãch tr√¨nh", href: "#" },
    { label: "Tin t·ª©c", href: "/news" },
    { label: "Li√™n h·ªá", href: "#" },
  ];

  return (
    <header className="bg-white/80 backdrop-blur-lg border-b border-gray-200 sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Logo */}
          <Link to="/" className="flex items-center space-x-3">
            <div className="text-2xl">üèõÔ∏è</div>
            <div>
              <h1 className="text-xl font-bold text-gray-900">
                H·ªôi Ngh·ªã Khoa H·ªçc 2025
              </h1>
              <p className="text-sm text-gray-600">C√¥ng ngh·ªá & ƒê·ªïi m·ªõi</p>
            </div>
          </Link>

          {/* Menu desktop */}
          <nav className="hidden md:flex items-center space-x-8">
            {navItems.map((item) => (
              <a
                key={item.href}
                href={item.href}
                className="text-gray-700 hover:text-blue-600 transition-colors"
              >
                {item.label}
              </a>
            ))}
          </nav>

          {/* Menu mobile toggle */}
          <button
            className="md:hidden text-gray-700"
            onClick={() => setOpen(!open)}
          >
            {open ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>

          {/* Actions desktop */}
          <div className="hidden md:flex items-center space-x-4">
            <Link to="/login">
              <Button>ƒêƒÉng nh·∫≠p</Button>
            </Link>
            <Link to="/register">
              <Button variant="outline">ƒêƒÉng k√Ω</Button>
            </Link>
          </div>
        </div>
      </div>

      {/* Mobile dropdown */}
      {open && (
        <div className="md:hidden bg-white border-t border-gray-200">
          <nav className="flex flex-col space-y-2 p-4">
            {navItems.map((item) => (
              <a
                key={item.href}
                href={item.href}
                className="text-gray-700 hover:text-blue-600 transition-colors"
              >
                {item.label}
              </a>
            ))}
            <Link to="/login">
              <Button className="mt-4 w-full">ƒêƒÉng nh·∫≠p</Button>
            </Link>
            <Link to="/register">
              <Button variant="outline" className="w-full">
                ƒêƒÉng k√Ω
              </Button>
            </Link>
          </nav>
        </div>
      )}
    </header>
  );
};

export default Navbar;

// frontend/src/pages/author/paper/[id]/edit.jsx
import React, { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Save } from "lucide-react";

// Gi·∫£ l·∫≠p d·ªØ li·ªáu (c√≥ th·ªÉ l·∫•y t·ª´ API)
const samplePapers = {
  "1": {
    title: "·ª®ng d·ª•ng Tr√≠ tu·ªá Nh√¢n t·∫°o trong Y t·∫ø",
    abstract: "Nghi√™n c·ª©u ·ª©ng d·ª•ng AI trong ch·∫©n ƒëo√°n h√¨nh ·∫£nh...",
  },
  "2": {
    title: "IoT trong qu·∫£n l√Ω nƒÉng l∆∞·ª£ng ƒë√¥ th·ªã",
    abstract: "B√†i b√°o ƒë·ªÅ xu·∫•t gi·∫£i ph√°p s·ª≠ d·ª•ng IoT...",
  },
};

const PaperEdit = () => {
  const { id } = useParams();
  const navigate = useNavigate();

  const paper = samplePapers[id] || { title: "", abstract: "" };

  const [title, setTitle] = useState(paper.title);
  const [abstract, setAbstract] = useState(paper.abstract);
  const [message, setMessage] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    // G·ªçi API update paper
    console.log("C·∫≠p nh·∫≠t b√†i b√°o:", { id, title, abstract });
    setMessage("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
    setTimeout(() => navigate(`/author/paper/${id}`), 1500);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-6 flex items-center justify-center">
      <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-2xl w-full border border-gray-100">
        <h1 className="text-2xl font-bold text-gray-900 mb-6">S·ª≠a b√†i b√°o</h1>

        {message && (
          <div className="bg-green-50 text-green-600 p-3 rounded-lg mb-6 text-sm">
            {message}
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Ti√™u ƒë·ªÅ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Ti√™u ƒë·ªÅ
            </label>
            <input
              type="text"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            />
          </div>

          {/* T√≥m t·∫Øt */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              T√≥m t·∫Øt
            </label>
            <textarea
              rows={5}
              value={abstract}
              onChange={(e) => setAbstract(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            />
          </div>

          <button
            type="submit"
            className="w-full flex items-center justify-center bg-blue-600 text-white py-2.5 rounded-lg hover:bg-blue-700 transition-colors font-semibold"
          >
            <Save className="w-5 h-5 mr-2" />
            L∆∞u thay ƒë·ªïi
          </button>
        </form>
      </div>
    </div>
  );
};

export default PaperEdit;

// frontend/src/pages/author/paper/[id].jsx
import React from "react";
import { useParams, Link } from "react-router-dom";
import { FileText, Calendar, User, Edit3 } from "lucide-react";

// D·ªØ li·ªáu m·∫´u
const samplePapers = [
  {
    id: "1",
    title: "·ª®ng d·ª•ng Tr√≠ tu·ªá Nh√¢n t·∫°o trong Y t·∫ø",
    author: "TS. Nguy·ªÖn VƒÉn An",
    date: "2025-09-10",
    abstract:
      "Nghi√™n c·ª©u ·ª©ng d·ª•ng AI trong ch·∫©n ƒëo√°n h√¨nh ·∫£nh v√† h·ªó tr·ª£ ra quy·∫øt ƒë·ªãnh l√¢m s√†ng, gi√∫p n√¢ng cao hi·ªáu qu·∫£ v√† ƒë·ªô ch√≠nh x√°c trong ƒëi·ªÅu tr·ªã.",
    file: "/uploads/paper1.pdf",
  },
  {
    id: "2",
    title: "IoT trong qu·∫£n l√Ω nƒÉng l∆∞·ª£ng ƒë√¥ th·ªã",
    author: "PGS.TS. Tr·∫ßn Th·ªã B√¨nh",
    date: "2025-09-12",
    abstract:
      "B√†i b√°o ƒë·ªÅ xu·∫•t gi·∫£i ph√°p s·ª≠ d·ª•ng IoT ƒë·ªÉ gi√°m s√°t v√† t·ªëi ∆∞u ho√° ti√™u th·ª• nƒÉng l∆∞·ª£ng trong c√°c ƒë√¥ th·ªã th√¥ng minh.",
    file: "/uploads/paper2.pdf",
  },
];

const PaperDetail = () => {
  const { id } = useParams();
  const paper = samplePapers.find((p) => p.id === id);

  if (!paper) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <p className="text-gray-600">Kh√¥ng t√¨m th·∫•y b√†i b√°o.</p>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-6">
      <div className="max-w-3xl mx-auto bg-white shadow-lg rounded-2xl p-8 border border-gray-100">
        <h1 className="text-3xl font-bold text-gray-900 mb-4">{paper.title}</h1>

        <div className="flex items-center space-x-6 text-gray-500 text-sm mb-6">
          <span className="flex items-center space-x-1">
            <User className="w-4 h-4" />
            <span>{paper.author}</span>
          </span>
          <span className="flex items-center space-x-1">
            <Calendar className="w-4 h-4" />
            <span>{paper.date}</span>
          </span>
        </div>

        <p className="text-gray-700 leading-relaxed whitespace-pre-line">
          {paper.abstract}
        </p>

        <div className="mt-6 space-x-4">
          <a
            href={paper.file}
            className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            target="_blank"
            rel="noopener noreferrer"
          >
            <FileText className="w-4 h-4 mr-2" />
            T·∫£i b√†i b√°o
          </a>

          <Link
            to={`/author/paper/${paper.id}/edit`}
            className="inline-flex items-center px-4 py-2 border border-blue-600 text-blue-600 rounded-lg hover:bg-blue-50 transition-colors"
          >
            <Edit3 className="w-4 h-4 mr-2" />
            S·ª≠a b√†i b√°o
          </Link>
        </div>
      </div>
    </div>
  );
};

export default PaperDetail;

// frontend/src/pages/author/index.jsx
import React from "react";
import { Users, GraduationCap } from "lucide-react";
import { Link } from "react-router-dom";
import DefaultLayout from "@/components/layout/DefaultLayout";

// D·ªØ li·ªáu m·∫´u
const authors = [
  {
    id: "1",
    name: "TS. Nguy·ªÖn VƒÉn An",
    institution: "ƒê·∫°i h·ªçc Qu·ªëc gia H√† N·ªôi",
    expertise: "Tr√≠ tu·ªá nh√¢n t·∫°o, H·ªçc m√°y",
    avatar: "https://i.pravatar.cc/150?img=11",
  },
  {
    id: "2",
    name: "PGS.TS. Tr·∫ßn Th·ªã B√¨nh",
    institution: "ƒê·∫°i h·ªçc B√°ch khoa TP.HCM",
    expertise: "Khoa h·ªçc d·ªØ li·ªáu, IoT",
    avatar: "https://i.pravatar.cc/150?img=12",
  },
  {
    id: "3",
    name: "GS. Ph·∫°m VƒÉn C∆∞·ªùng",
    institution: "Vi·ªán Khoa h·ªçc & C√¥ng ngh·ªá Vi·ªát Nam",
    expertise: "ƒêi·ªán to√°n ƒë√°m m√¢y, B·∫£o m·∫≠t",
    avatar: "https://i.pravatar.cc/150?img=13",
  },
  {
    id: "4",
    name: "TS. L√™ Th·ªã Dung",
    institution: "ƒê·∫°i h·ªçc ƒê√† N·∫µng",
    expertise: "X·ª≠ l√Ω ng√¥n ng·ªØ t·ª± nhi√™n",
    avatar: "https://i.pravatar.cc/150?img=14",
  },
];

const AuthorList = () => {
  return (
    <DefaultLayout>
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-6">
        <div className="max-w-5xl mx-auto">
          {/* Ti√™u ƒë·ªÅ */}
          <div className="text-center mb-12">
            <div className="flex justify-center mb-4">
              <Users className="w-12 h-12 text-blue-600" />
            </div>
            <h1 className="text-3xl font-bold text-gray-900">
              Danh s√°ch t√°c gi·∫£
            </h1>
            <p className="text-gray-600 mt-2">
              G·∫∑p g·ª° c√°c nh√† nghi√™n c·ª©u tham gia H·ªôi ngh·ªã Khoa h·ªçc 2025
            </p>
          </div>

          {/* Grid hi·ªÉn th·ªã t√°c gi·∫£ */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {authors.map((author) => (
              <div
                key={author.id}
                className="bg-white rounded-2xl shadow-lg p-6 text-center border border-gray-100 hover:shadow-xl transition-shadow"
              >
                <img
                  src={author.avatar}
                  alt={author.name}
                  className="w-24 h-24 rounded-full mx-auto mb-4 object-cover"
                />
                <h2 className="text-lg font-bold text-gray-900">
                  {author.name}
                </h2>
                <p className="text-sm text-gray-600">{author.institution}</p>
                <div className="flex items-center justify-center space-x-2 mt-2 text-blue-600 text-sm">
                  <GraduationCap className="w-4 h-4" />
                  <span>{author.expertise}</span>
                </div>

                {/* N·∫øu mu·ªën link t·ªõi trang chi ti·∫øt */}
                <Link
                  to={`/author/${author.id}`}
                  className="inline-block mt-4 text-sm text-blue-600 hover:text-blue-700 font-medium"
                >
                  Xem chi ti·∫øt ‚Üí
                </Link>
              </div>
            ))}
          </div>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default AuthorList;

// frontend/src/pages/author/profile.jsx
import React, { useState } from "react";
import { User, Mail, Save } from "lucide-react";
import DefaultLayout from "@/components/layout/DefaultLayout";

const AuthorProfile = () => {
  const [profile, setProfile] = useState({
    name: "Nguy·ªÖn VƒÉn An",
    email: "an.nguyen@example.com",
    affiliation: "ƒê·∫°i h·ªçc B√°ch Khoa H√† N·ªôi",
    bio: "Nghi√™n c·ª©u vi√™n trong lƒ©nh v·ª±c Tr√≠ tu·ªá Nh√¢n t·∫°o v√† ·ª®ng d·ª•ng trong Y t·∫ø.",
  });

  const [message, setMessage] = useState("");

  const handleChange = (e) => {
    setProfile({ ...profile, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("C·∫≠p nh·∫≠t h·ªì s∆°:", profile);
    setMessage("‚úÖ H·ªì s∆° ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!");
  };

  return (
    <DefaultLayout>
      <div className="bg-gradient-to-br from-purple-50 via-white to-blue-50 p-6 flex items-center justify-center">
        <div className="bg-white shadow-xl rounded-2xl p-8 max-w-2xl w-full border border-gray-100">
          <h1 className="text-2xl font-bold text-gray-900 mb-6">H·ªì s∆° t√°c gi·∫£</h1>

          {message && (
            <div className="bg-green-50 text-green-600 p-3 rounded-lg mb-6 text-sm">
              {message}
            </div>
          )}

          <form onSubmit={handleSubmit} className="space-y-6">
            {/* H·ªç t√™n */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                H·ªç v√† t√™n
              </label>
              <div className="flex items-center border border-gray-300 rounded-lg px-3">
                <User className="w-5 h-5 text-gray-400 mr-2" />
                <input
                  type="text"
                  name="name"
                  value={profile.name}
                  onChange={handleChange}
                  className="w-full py-2 focus:outline-none"
                />
              </div>
            </div>

            {/* Email */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Email
              </label>
              <div className="flex items-center border border-gray-300 rounded-lg px-3">
                <Mail className="w-5 h-5 text-gray-400 mr-2" />
                <input
                  type="email"
                  name="email"
                  value={profile.email}
                  onChange={handleChange}
                  className="w-full py-2 focus:outline-none"
                />
              </div>
            </div>

            {/* C∆° quan */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                C∆° quan / T·ªï ch·ª©c
              </label>
              <input
                type="text"
                name="affiliation"
                value={profile.affiliation}
                onChange={handleChange}
                className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>

            {/* Gi·ªõi thi·ªáu */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Gi·ªõi thi·ªáu b·∫£n th√¢n
              </label>
              <textarea
                name="bio"
                rows={4}
                value={profile.bio}
                onChange={handleChange}
                className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>

            {/* N√∫t l∆∞u */}
            <button
              type="submit"
              className="w-full flex items-center justify-center bg-blue-600 text-white py-2.5 rounded-lg hover:bg-blue-700 transition-colors font-semibold"
            >
              <Save className="w-5 h-5 mr-2" />
              L∆∞u thay ƒë·ªïi
            </button>
          </form>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default AuthorProfile;

// frontend/src/pages/author/submit.jsx
import React, { useState } from "react";
import { FileText, Upload, User } from "lucide-react";

const AuthorSubmit = () => {
  const [title, setTitle] = useState("");
  const [abstract, setAbstract] = useState("");
  const [author, setAuthor] = useState("");
  const [file, setFile] = useState(null);
  const [message, setMessage] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!title || !abstract || !author || !file) {
      setMessage("‚ö†Ô∏è Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
    } else {
      // X·ª≠ l√Ω n·ªôp b√†i (call API)
      console.log("N·ªôp b√†i:", { title, abstract, author, file });
      setMessage("‚úÖ B√†i b√°o c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!");
      setTitle("");
      setAbstract("");
      setAuthor("");
      setFile(null);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-6 flex items-center justify-center">
      <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-2xl w-full border border-gray-100">
        <div className="text-center mb-8">
          <div className="flex justify-center mb-3">
            <FileText className="w-12 h-12 text-blue-600" />
          </div>
          <h1 className="text-2xl font-bold text-gray-900">N·ªôp b√†i b√°o khoa h·ªçc</h1>
          <p className="text-gray-600 mt-2">
            Vui l√≤ng ƒëi·ªÅn th√¥ng tin b√™n d∆∞·ªõi ƒë·ªÉ n·ªôp b√†i cho H·ªôi ngh·ªã Khoa h·ªçc 2025
          </p>
        </div>

        {message && (
          <div
            className={`p-3 rounded-lg mb-6 text-sm ${
              message.startsWith("‚úÖ")
                ? "bg-green-50 text-green-600"
                : "bg-red-50 text-red-600"
            }`}
          >
            {message}
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Ti√™u ƒë·ªÅ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Ti√™u ƒë·ªÅ b√†i b√°o
            </label>
            <input
              type="text"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              placeholder="Nh·∫≠p ti√™u ƒë·ªÅ..."
            />
          </div>

          {/* T√≥m t·∫Øt */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              T√≥m t·∫Øt
            </label>
            <textarea
              value={abstract}
              onChange={(e) => setAbstract(e.target.value)}
              rows={5}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              placeholder="Nh·∫≠p t√≥m t·∫Øt ng·∫Øn g·ªçn..."
            />
          </div>

          {/* T√°c gi·∫£ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              T√°c gi·∫£ ch√≠nh
            </label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <User className="w-5 h-5 text-gray-400" />
              </div>
              <input
                type="text"
                value={author}
                onChange={(e) => setAuthor(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="Nh·∫≠p t√™n t√°c gi·∫£..."
              />
            </div>
          </div>

          {/* File upload */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              File b√†i b√°o (PDF)
            </label>
            <input
              type="file"
              accept=".pdf"
              onChange={(e) => setFile(e.target.files[0])}
              className="w-full border border-gray-300 rounded-lg p-2"
            />
            {file && (
              <p className="mt-2 text-sm text-gray-600 flex items-center space-x-2">
                <Upload className="w-4 h-4 text-blue-600" />
                <span>{file.name}</span>
              </p>
            )}
          </div>

          {/* Submit */}
          <button
            type="submit"
            className="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white py-2.5 rounded-lg hover:from-blue-700 hover:to-blue-800 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 font-semibold"
          >
            G·ª≠i b√†i b√°o
          </button>
        </form>
      </div>
    </div>
  );
};

export default AuthorSubmit;

// frontend/src/pages/news/index.jsx
import React from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Calendar } from "lucide-react";

// üîπ Dummy data (sau n√†y thay b·∫±ng fetch API ho·∫∑c MongoDB)
const newsList = [
  {
    id: 1,
    title: "Khai m·∫°c H·ªôi ngh·ªã Khoa h·ªçc Qu·ªëc t·∫ø 2025",
    date: "2025-09-15",
    summary: "S·ª± ki·ªán khai m·∫°c h·ªôi ngh·ªã ƒë√£ di·ªÖn ra long tr·ªçng v·ªõi s·ª± tham d·ª± c·ªßa h∆°n 500 nh√† khoa h·ªçc ƒë·∫øn t·ª´ nhi·ªÅu qu·ªëc gia.",
  },
  {
    id: 2,
    title: "Th√¥ng b√°o h·∫°n n·ªôp b√†i m·ªõi",
    date: "2025-08-30",
    summary: "Ban t·ªï ch·ª©c gia h·∫°n th·ªùi gian n·ªôp b√†i ƒë·∫øn ng√†y 15/10/2025 ƒë·ªÉ t·∫°o ƒëi·ªÅu ki·ªán cho c√°c t√°c gi·∫£ ho√†n thi·ªán nghi√™n c·ª©u.",
  },
  {
    id: 3,
    title: "Danh s√°ch di·ªÖn gi·∫£ ch√≠nh",
    date: "2025-08-20",
    summary: "H·ªôi ngh·ªã h√¢n h·∫°nh gi·ªõi thi·ªáu danh s√°ch c√°c di·ªÖn gi·∫£ ch√≠nh t·ª´ c√°c tr∆∞·ªùng ƒë·∫°i h·ªçc h√†ng ƒë·∫ßu th·∫ø gi·ªõi.",
  },
];

const NewsPage = () => {
  return (
    <DefaultLayout>
      <div className="max-w-5xl mx-auto py-12 px-4">
        <h1 className="text-3xl font-bold text-gray-900 mb-8">Tin t·ª©c h·ªôi ngh·ªã</h1>

        <div className="grid md:grid-cols-2 gap-6">
          {newsList.map((news) => (
            <Card key={news.id} className="hover:shadow-lg transition-shadow">
              <CardHeader>
                <CardTitle className="text-xl font-semibold">{news.title}</CardTitle>
                <div className="flex items-center text-gray-500 text-sm mt-1">
                  <Calendar className="w-4 h-4 mr-1" />
                  {news.date}
                </div>
              </CardHeader>
              <CardContent>
                <p className="text-gray-600 mb-4">{news.summary}</p>
                <Button asChild variant="outline" size="sm">
                  <a href={`/news/${news.id}`}>Xem chi ti·∫øt</a>
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </DefaultLayout>
  );
};

export default NewsPage;

// frontend/src/pages/news/[id].jsx
import React from "react";
import { useParams, Link } from "react-router-dom";
import { Calendar, User } from "lucide-react";
import DefaultLayout from "@/components/layout/DefaultLayout";

// D·ªØ li·ªáu m·∫´u
const newsData = [
  {
    id: "1",
    title: "Khai m·∫°c H·ªôi ngh·ªã Khoa h·ªçc 2025",
    date: "2025-09-15",
    author: "Ban T·ªï Ch·ª©c",
    content: `
      H·ªôi ngh·ªã Khoa h·ªçc 2025 ch√≠nh th·ª©c khai m·∫°c v·ªõi s·ª± tham gia c·ªßa h∆°n 500 nh√† nghi√™n c·ª©u
      trong v√† ngo√†i n∆∞·ªõc. Nhi·ªÅu c√¥ng tr√¨nh nghi√™n c·ª©u xu·∫•t s·∫Øc s·∫Ω ƒë∆∞·ª£c tr√¨nh b√†y trong 3 ng√†y di·ªÖn ra h·ªôi ngh·ªã.
    `,
  },
  {
    id: "2",
    title: "C√¥ng b·ªë c√°c ƒë·ªÅ t√†i nghi√™n c·ª©u n·ªïi b·∫≠t",
    date: "2025-09-16",
    author: "Ban Bi√™n T·∫≠p",
    content: `
      H·ªôi ngh·ªã ƒë√£ c√¥ng b·ªë danh s√°ch c√°c ƒë·ªÅ t√†i nghi√™n c·ª©u n·ªïi b·∫≠t trong lƒ©nh v·ª±c AI, 
      IoT, v√† khoa h·ªçc d·ªØ li·ªáu. ƒê√¢y s·∫Ω l√† n·ªÅn t·∫£ng cho c√°c h·ª£p t√°c nghi√™n c·ª©u trong t∆∞∆°ng lai.
    `,
  },
  {
    id: "3",
    title: "Trao gi·∫£i th∆∞·ªüng nghi√™n c·ª©u xu·∫•t s·∫Øc",
    date: "2025-09-17",
    author: "Ban T·ªï Ch·ª©c",
    content: `
      Gi·∫£i th∆∞·ªüng nghi√™n c·ª©u xu·∫•t s·∫Øc nƒÉm nay ƒë√£ thu·ªôc v·ªÅ nh√≥m nghi√™n c·ª©u ƒë·∫øn t·ª´ ƒê·∫°i h·ªçc Qu·ªëc gia,
      v·ªõi c√¥ng tr√¨nh ·ª©ng d·ª•ng tr√≠ tu·ªá nh√¢n t·∫°o trong y t·∫ø.
    `,
  },
];

const NewsDetail = () => {
  const { id } = useParams();
  const article = newsData.find((item) => item.id === id);

  if (!article) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <p className="text-gray-600">Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt.</p>
      </div>
    );
  }

  return (
    <DefaultLayout>
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-6">
        <div className="max-w-3xl mx-auto bg-white shadow-lg rounded-2xl p-8 border border-gray-100">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            {article.title}
          </h1>

          <div className="flex items-center space-x-6 text-gray-500 text-sm mb-6">
            <span className="flex items-center space-x-1">
              <Calendar className="w-4 h-4" />
              <span>{article.date}</span>
            </span>
            <span className="flex items-center space-x-1">
              <User className="w-4 h-4" />
              <span>{article.author}</span>
            </span>
          </div>

          <p className="text-gray-700 leading-relaxed whitespace-pre-line">
            {article.content}
          </p>

          <div className="mt-8">
            <Link
              to="/news"
              className="inline-block text-blue-600 hover:text-blue-700 font-medium"
            >
              ‚Üê Quay l·∫°i danh s√°ch tin t·ª©c
            </Link>
          </div>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default NewsDetail;

// frontend/src/pages/reviewer/review/[id].jsx
import React, { useState } from "react";
import { useParams } from "react-router-dom";
import { FileText, MessageSquare, CheckCircle } from "lucide-react";

// D·ªØ li·ªáu m·∫´u
const sampleReviews = {
  "101": {
    paperTitle: "·ª®ng d·ª•ng Tr√≠ tu·ªá Nh√¢n t·∫°o trong Y t·∫ø",
    authors: "Nguy·ªÖn VƒÉn An, Tr·∫ßn Th·ªã B√¨nh",
    status: "ƒêang ph·∫£n bi·ªán",
    comments: "B√†i b√°o c√≥ ti·ªÅm nƒÉng, c·∫ßn b·ªï sung th√™m s·ªë li·ªáu th·ª±c nghi·ªám.",
    decision: null,
  },
  "102": {
    paperTitle: "ƒêi·ªán to√°n ƒë√°m m√¢y v√† An to√†n th√¥ng tin",
    authors: "Ph·∫°m VƒÉn C∆∞·ªùng, L√™ Th·ªã Dung",
    status: "Ho√†n th√†nh",
    comments: "N·ªôi dung t·ªët, r√µ r√†ng. ƒê·ªÅ xu·∫•t ch·∫•p nh·∫≠n.",
    decision: "Accept",
  },
};

const ReviewDetail = () => {
  const { id } = useParams();
  const review = sampleReviews[id];

  const [comments, setComments] = useState(review?.comments || "");
  const [decision, setDecision] = useState(review?.decision || "");

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("L∆∞u ph·∫£n bi·ªán:", { id, comments, decision });
    alert("‚úÖ Ph·∫£n bi·ªán ƒë√£ ƒë∆∞·ª£c l∆∞u!");
  };

  if (!review) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <p className="text-gray-600">Kh√¥ng t√¨m th·∫•y b√†i ph·∫£n bi·ªán.</p>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-yellow-50 via-white to-green-50 p-6">
      <div className="max-w-3xl mx-auto bg-white shadow-xl rounded-2xl p-8 border border-gray-100">
        {/* Ti√™u ƒë·ªÅ */}
        <div className="mb-6">
          <h1 className="text-2xl font-bold text-gray-900 flex items-center">
            <FileText className="w-7 h-7 mr-2 text-blue-600" />
            {review.paperTitle}
          </h1>
          <p className="text-gray-600 mt-1">T√°c gi·∫£: {review.authors}</p>
          <span className="inline-block mt-2 px-3 py-1 text-sm rounded-full bg-yellow-100 text-yellow-700">
            {review.status}
          </span>
        </div>

        {/* Form ph·∫£n bi·ªán */}
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Nh·∫≠n x√©t */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2 flex items-center">
              <MessageSquare className="w-4 h-4 mr-1 text-gray-500" />
              Nh·∫≠n x√©t c·ªßa reviewer
            </label>
            <textarea
              value={comments}
              onChange={(e) => setComments(e.target.value)}
              rows={5}
              className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            />
          </div>

          {/* Quy·∫øt ƒë·ªãnh */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2 flex items-center">
              <CheckCircle className="w-4 h-4 mr-1 text-gray-500" />
              Quy·∫øt ƒë·ªãnh
            </label>
            <select
              value={decision}
              onChange={(e) => setDecision(e.target.value)}
              className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="">-- Ch·ªçn quy·∫øt ƒë·ªãnh --</option>
              <option value="Accept">Accept</option>
              <option value="Minor Revision">Minor Revision</option>
              <option value="Major Revision">Major Revision</option>
              <option value="Reject">Reject</option>
            </select>
          </div>

          <button
            type="submit"
            className="w-full bg-blue-600 text-white py-2.5 rounded-lg hover:bg-blue-700 transition-colors font-semibold"
          >
            L∆∞u ph·∫£n bi·ªán
          </button>
        </form>
      </div>
    </div>
  );
};

export default ReviewDetail;

// frontend/src/pages/reviewer/index.jsx
import React from "react";
import { Users, FileCheck } from "lucide-react";
import DefaultLayout from "@/components/layout/DefaultLayout";

// D·ªØ li·ªáu m·∫´u reviewer
const reviewers = [
  {
    id: "r1",
    name: "TS. Ho√†ng Minh Qu√¢n",
    institution: "ƒê·∫°i h·ªçc Qu·ªëc gia TP.HCM",
    expertise: "Khoa h·ªçc m√°y t√≠nh, H·ªá th·ªëng ph√¢n t√°n",
    reviewedPapers: 12,
    avatar: "https://i.pravatar.cc/150?img=21",
  },
  {
    id: "r2",
    name: "PGS.TS. L√™ Th·ªã H·ªìng",
    institution: "H·ªçc vi·ªán C√¥ng ngh·ªá B∆∞u ch√≠nh Vi·ªÖn th√¥ng",
    expertise: "M·∫°ng m√°y t√≠nh, An to√†n th√¥ng tin",
    reviewedPapers: 8,
    avatar: "https://i.pravatar.cc/150?img=22",
  },
  {
    id: "r3",
    name: "GS. Nguy·ªÖn VƒÉn B·∫£o",
    institution: "Vi·ªán C√¥ng ngh·ªá Th√¥ng tin",
    expertise: "Tr√≠ tu·ªá nh√¢n t·∫°o, Th·ªã gi√°c m√°y t√≠nh",
    reviewedPapers: 15,
    avatar: "https://i.pravatar.cc/150?img=23",
  },
  {
    id: "r4",
    name: "TS. Ph·∫°m Th·ªã Lan",
    institution: "ƒê·∫°i h·ªçc C·∫ßn Th∆°",
    expertise: "D·ªØ li·ªáu l·ªõn, Khoa h·ªçc d·ªØ li·ªáu",
    reviewedPapers: 10,
    avatar: "https://i.pravatar.cc/150?img=24",
  },
];

const ReviewerList = () => {
  return (
    <DefaultLayout>
      <div className="min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 p-6">
        <div className="max-w-5xl mx-auto">
          {/* Ti√™u ƒë·ªÅ */}
          <div className="text-center mb-12">
            <div className="flex justify-center mb-4">
              <Users className="w-12 h-12 text-green-600" />
            </div>
            <h1 className="text-3xl font-bold text-gray-900">
              Danh s√°ch Reviewer
            </h1>
            <p className="text-gray-600 mt-2">
              C√°c chuy√™n gia ph·∫£n bi·ªán tham gia H·ªôi ngh·ªã Khoa h·ªçc 2025
            </p>
          </div>

          {/* Grid reviewers */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {reviewers.map((rv) => (
              <div
                key={rv.id}
                className="bg-white rounded-2xl shadow-lg p-6 text-center border border-gray-100 hover:shadow-xl transition-shadow"
              >
                <img
                  src={rv.avatar}
                  alt={rv.name}
                  className="w-24 h-24 rounded-full mx-auto mb-4 object-cover"
                />
                <h2 className="text-lg font-bold text-gray-900">{rv.name}</h2>
                <p className="text-sm text-gray-600">{rv.institution}</p>
                <p className="text-sm text-blue-600 mt-1">{rv.expertise}</p>
                <div className="flex items-center justify-center mt-3 text-sm text-gray-700">
                  <FileCheck className="w-4 h-4 mr-1 text-green-600" />
                  <span>{rv.reviewedPapers} b√†i ƒë√£ ph·∫£n bi·ªán</span>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default ReviewerList;

// frontend/src/components/layout/DefaultLayout.jsx
import Navbar from "@/components/navbar";
import Footer from "@/components/footer";

export default function DefaultLayout({ children }) {
  return (
    <div className="min-h-screen flex flex-col">
      <Navbar />
      <main className="flex-1">{children}</main>
      <Footer />
    </div>
  );
}

// frontend/src/pages/reviewer/profile.jsx
import React, { useState } from "react";
import { User, Mail, BookOpen, Save } from "lucide-react";

const ReviewerProfile = () => {
  // D·ªØ li·ªáu m·∫´u (sau n√†y thay b·∫±ng API)
  const [profile, setProfile] = useState({
    name: "TS. Ho√†ng Minh Qu√¢n",
    email: "quan.hoang@example.com",
    institution: "ƒê·∫°i h·ªçc Qu·ªëc gia TP.HCM",
    expertise: "H·ªá th·ªëng ph√¢n t√°n, An to√†n th√¥ng tin",
    bio: "Reviewer nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c h·ªá th·ªëng m√°y t√≠nh v√† b·∫£o m·∫≠t.",
  });

  const [message, setMessage] = useState("");

  const handleChange = (e) => {
    setProfile({ ...profile, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("C·∫≠p nh·∫≠t h·ªì s∆° reviewer:", profile);
    setMessage("‚úÖ H·ªì s∆° reviewer ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!");
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 p-6 flex items-center justify-center">
      <div className="bg-white shadow-xl rounded-2xl p-8 max-w-2xl w-full border border-gray-100">
        <h1 className="text-2xl font-bold text-gray-900 mb-6">
          H·ªì s∆° Reviewer
        </h1>

        {message && (
          <div className="bg-green-50 text-green-600 p-3 rounded-lg mb-6 text-sm">
            {message}
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* H·ªç t√™n */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              H·ªç v√† t√™n
            </label>
            <div className="flex items-center border border-gray-300 rounded-lg px-3">
              <User className="w-5 h-5 text-gray-400 mr-2" />
              <input
                type="text"
                name="name"
                value={profile.name}
                onChange={handleChange}
                className="w-full py-2 focus:outline-none"
              />
            </div>
          </div>

          {/* Email */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Email
            </label>
            <div className="flex items-center border border-gray-300 rounded-lg px-3">
              <Mail className="w-5 h-5 text-gray-400 mr-2" />
              <input
                type="email"
                name="email"
                value={profile.email}
                onChange={handleChange}
                className="w-full py-2 focus:outline-none"
              />
            </div>
          </div>

          {/* C∆° quan c√¥ng t√°c */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              C∆° quan / T·ªï ch·ª©c
            </label>
            <input
              type="text"
              name="institution"
              value={profile.institution}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-500 focus:border-green-500"
            />
          </div>

          {/* Lƒ©nh v·ª±c chuy√™n m√¥n */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Lƒ©nh v·ª±c chuy√™n m√¥n
            </label>
            <div className="flex items-center border border-gray-300 rounded-lg px-3">
              <BookOpen className="w-5 h-5 text-gray-400 mr-2" />
              <input
                type="text"
                name="expertise"
                value={profile.expertise}
                onChange={handleChange}
                className="w-full py-2 focus:outline-none"
              />
            </div>
          </div>

          {/* Gi·ªõi thi·ªáu */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Gi·ªõi thi·ªáu b·∫£n th√¢n
            </label>
            <textarea
              name="bio"
              rows={4}
              value={profile.bio}
              onChange={handleChange}
              className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-500 focus:border-green-500"
            />
          </div>

          {/* N√∫t l∆∞u */}
          <button
            type="submit"
            className="w-full flex items-center justify-center bg-green-600 text-white py-2.5 rounded-lg hover:bg-green-700 transition-colors font-semibold"
          >
            <Save className="w-5 h-5 mr-2" />
            L∆∞u thay ƒë·ªïi
          </button>
        </form>
      </div>
    </div>
  );
};

export default ReviewerProfile;

// frontend/src/pages/forgot-password.jsx
import React, { useState } from "react";
import { Mail } from "lucide-react";
import { Link } from "react-router-dom";

const ForgotPassword = () => {
  const [email, setEmail] = useState("");
  const [message, setMessage] = useState("");
  const [error, setError] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!email) {
      setError("Vui l√≤ng nh·∫≠p email.");
      setMessage("");
    } else {
      setError("");
      // G·ªçi API g·ª≠i mail reset password
      console.log("Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho:", email);
      setMessage("N·∫øu email t·ªìn t·∫°i, h∆∞·ªõng d·∫´n ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i.");
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full border border-gray-100">
        <div className="text-center mb-8">
          <div className="text-4xl mb-2">üîë</div>
          <h2 className="text-2xl font-bold text-gray-900">Qu√™n m·∫≠t kh·∫©u</h2>
          <p className="text-gray-600">
            Nh·∫≠p email c·ªßa b·∫°n ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
          </p>
        </div>

        {error && (
          <div className="bg-red-50 text-red-600 p-3 rounded-lg mb-6 text-sm">
            {error}
          </div>
        )}
        {message && (
          <div className="bg-green-50 text-green-600 p-3 rounded-lg mb-6 text-sm">
            {message}
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Email
            </label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <Mail className="w-5 h-5 text-gray-400" />
              </div>
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="nhapemail@university.edu.vn"
              />
            </div>
          </div>

          <button
            type="submit"
            className="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white py-2.5 rounded-lg hover:from-blue-700 hover:to-blue-800 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 font-semibold"
          >
            G·ª≠i y√™u c·∫ßu
          </button>
        </form>

        <div className="text-center mt-6 text-gray-600">
          <Link to="/login" className="text-blue-600 hover:text-blue-700 font-medium">
            ‚Üê Quay l·∫°i ƒëƒÉng nh·∫≠p
          </Link>
        </div>
      </div>
    </div>
  );
};

export default ForgotPassword;

// frontend/src/pages/index.jsx
import React, { useState } from "react";
import {
  Calendar,
  Users,
  FileText,
  Award,
  Clock,
  MapPin,
  Star,
  ChevronRight,
} from "lucide-react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Button } from "@/components/ui/button";

const HomePage = () => {
  const [activeTab, setActiveTab] = useState("overview");

  const stats = [
    {
      label: "B√†i b√°o ƒë√£ nh·∫≠n",
      value: "1,247",
      icon: FileText,
      color: "bg-blue-500",
    },
    {
      label: "T√°c gi·∫£ tham gia",
      value: "892",
      icon: Users,
      color: "bg-green-500",
    },
    {
      label: "Ph·∫£n bi·ªán vi√™n",
      value: "156",
      icon: Star,
      color: "bg-purple-500",
    },
    { label: "Ng√†y c√≤n l·∫°i", value: "45", icon: Clock, color: "bg-red-500" },
  ];

  const timeline = [
    { date: "15/12/2024", title: "H·∫°n cu·ªëi n·ªôp b√†i", status: "completed" },
    {
      date: "20/01/2025",
      title: "Th√¥ng b√°o k·∫øt qu·∫£ ph·∫£n bi·ªán",
      status: "active",
    },
    { date: "15/02/2025", title: "H·∫°n n·ªôp b√†i s·ª≠a ƒë·ªïi", status: "upcoming" },
    { date: "01/03/2025", title: "Khai m·∫°c h·ªôi ngh·ªã", status: "upcoming" },
  ];

  const news = [
    {
      id: 1,
      title: "Th√¥ng b√°o gia h·∫°n n·ªôp b√†i b√°o ƒë·∫øn 20/12/2024",
      excerpt:
        "Do nhi·ªÅu y√™u c·∫ßu t·ª´ c·ªông ƒë·ªìng nghi√™n c·ª©u, ban t·ªï ch·ª©c quy·∫øt ƒë·ªãnh gia h·∫°n th·ªùi gian n·ªôp b√†i...",
      date: "10/12/2024",
      category: "Th√¥ng b√°o quan tr·ªçng",
    },
    {
      id: 2,
      title: "Danh s√°ch di·ªÖn gi·∫£ ch√≠nh ƒë√£ ƒë∆∞·ª£c c√¥ng b·ªë",
      excerpt:
        "Ch√∫ng t√¥i vinh d·ª± gi·ªõi thi·ªáu c√°c chuy√™n gia h√†ng ƒë·∫ßu s·∫Ω tham gia h·ªôi ngh·ªã nƒÉm nay...",
      date: "05/12/2024",
      category: "Tin t·ª©c",
    },
    {
      id: 3,
      title: "H∆∞·ªõng d·∫´n chu·∫©n b·ªã b√†i b√°o theo template m·ªõi",
      excerpt:
        "Template m·ªõi ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v·ªõi c√°c y√™u c·∫ßu v·ªÅ ƒë·ªãnh d·∫°ng v√† c·∫•u tr√∫c b√†i b√°o...",
      date: "01/12/2024",
      category: "H∆∞·ªõng d·∫´n",
    },
  ];

  const speakers = [
    {
      name: "TS. Nguy·ªÖn VƒÉn An",
      title: "Gi√°m ƒë·ªëc Vi·ªán AI Qu·ªëc gia",
      topic: "T∆∞∆°ng lai c·ªßa AI trong gi√°o d·ª•c",
      avatar: "üë®‚Äçüéì",
    },
    {
      name: "PGS.TS. Tr·∫ßn Th·ªã B√¨nh",
      title: "Tr∆∞·ªüng khoa CNTT - ƒêH B√°ch Khoa",
      topic: "Blockchain v√† ·ª©ng d·ª•ng th·ª±c t·∫ø",
      avatar: "üë©‚Äçüè´",
    },
    {
      name: "TS. L√™ Ho√†ng C∆∞·ªùng",
      title: "Chuy√™n gia An ninh m·∫°ng",
      topic: "Cybersecurity trong k·ª∑ nguy√™n s·ªë",
      avatar: "üë®‚Äçüíª",
    },
  ];

  return (
    <DefaultLayout>
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
        {/* Hero Section */}
        <section className="relative py-20 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-r from-blue-600/10 to-purple-600/10"></div>
          <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <div className="inline-flex items-center bg-blue-100 text-blue-800 text-sm font-medium px-4 py-2 rounded-full mb-6">
              üéØ H·∫°n n·ªôp b√†i: 20/12/2024
            </div>

            <h1 className="text-5xl md:text-6xl font-bold text-gray-900 mb-6">
              H·ªôi Ngh·ªã Khoa H·ªçc
              <span className="block text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">
                Qu·ªëc T·∫ø 2025
              </span>
            </h1>

            <p className="text-xl text-gray-600 mb-8 max-w-3xl mx-auto">
              N·ªÅn t·∫£ng h√†ng ƒë·∫ßu k·∫øt n·ªëi c√°c nh√† nghi√™n c·ª©u, chia s·∫ª ki·∫øn th·ª©c v√†
              th√∫c ƒë·∫©y s·ª± ƒë·ªïi m·ªõi trong lƒ©nh v·ª±c c√¥ng ngh·ªá th√¥ng tin v√† khoa h·ªçc
              m√°y t√≠nh.
            </p>

            <div className="flex flex-col sm:flex-row items-center justify-center gap-4 mb-12">
              <Button size="lg" className="px-8">
                N·ªôp b√†i b√°o ngay
              </Button>
              <Button variant="outline" size="lg" className="px-8">
                T·∫£i template
              </Button>
            </div>

            {/* Quick Info */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
              <div className="flex items-center justify-center space-x-3">
                <Calendar className="w-6 h-6 text-blue-600" />
                <span className="text-gray-700 font-medium">
                  1-3 Th√°ng 3, 2025
                </span>
              </div>
              <div className="flex items-center justify-center space-x-3">
                <MapPin className="w-6 h-6 text-blue-600" />
                <span className="text-gray-700 font-medium">
                  TP. H·ªì Ch√≠ Minh, Vi·ªát Nam
                </span>
              </div>
              <div className="flex items-center justify-center space-x-3">
                <Users className="w-6 h-6 text-blue-600" />
                <span className="text-gray-700 font-medium">
                  1000+ Tham d·ª± vi√™n
                </span>
              </div>
            </div>
          </div>
        </section>

        {/* Stats Section */}
        <section className="py-16 bg-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {stats.map((stat, index) => (
                <div key={index} className="relative group">
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl opacity-0 group-hover:opacity-10 transition-opacity duration-300"></div>
                  <div className="relative bg-white rounded-2xl p-6 border border-gray-100 shadow-sm hover:shadow-lg transition-shadow duration-300">
                    <div className="flex items-center justify-between mb-4">
                      <div
                        className={`w-12 h-12 rounded-xl ${stat.color} flex items-center justify-center text-white`}
                      >
                        <stat.icon className="w-6 h-6" />
                      </div>
                      <ChevronRight className="w-5 h-5 text-gray-400 group-hover:text-blue-600 transition-colors" />
                    </div>
                    <h3 className="text-3xl font-bold text-gray-900 mb-2">
                      {stat.value}
                    </h3>
                    <p className="text-gray-600 font-medium">{stat.label}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Timeline Section */}
        <section className="py-16 bg-gray-50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                L·ªãch tr√¨nh quan tr·ªçng
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                Theo d√µi c√°c m·ªëc th·ªùi gian quan tr·ªçng ƒë·ªÉ kh√¥ng b·ªè l·ª° c∆° h·ªôi tham
                gia h·ªôi ngh·ªã
              </p>
            </div>

            <div className="relative">
              <div className="absolute left-1/2 transform -translate-x-px h-full w-0.5 bg-gray-300"></div>
              <div className="space-y-12">
                {timeline.map((item, index) => (
                  <div key={index} className="relative flex items-center">
                    <div className="flex-1 text-right pr-8">
                      {index % 2 === 0 && (
                        <div>
                          <h3 className="text-lg font-semibold text-gray-900">
                            {item.title}
                          </h3>
                          <p className="text-gray-600">{item.date}</p>
                        </div>
                      )}
                    </div>

                    <div
                      className={`relative z-10 w-4 h-4 rounded-full border-4 ${
                        item.status === "completed"
                          ? "bg-green-500 border-green-200"
                          : item.status === "active"
                          ? "bg-blue-500 border-blue-200"
                          : "bg-gray-300 border-gray-200"
                      }`}
                    ></div>

                    <div className="flex-1 pl-8">
                      {index % 2 === 1 && (
                        <div>
                          <h3 className="text-lg font-semibold text-gray-900">
                            {item.title}
                          </h3>
                          <p className="text-gray-600">{item.date}</p>
                        </div>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* Speakers Section */}
        <section className="py-16 bg-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                Di·ªÖn gi·∫£ ch√≠nh
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                G·∫∑p g·ª° c√°c chuy√™n gia h√†ng ƒë·∫ßu s·∫Ω chia s·∫ª nh·ªØng nghi√™n c·ª©u ti√™n
                phong
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {speakers.map((speaker, index) => (
                <div key={index} className="text-center group">
                  <div className="relative mb-6">
                    <div className="w-32 h-32 mx-auto rounded-full bg-gradient-to-br from-blue-100 to-purple-100 flex items-center justify-center text-4xl group-hover:shadow-lg transition-shadow duration-300">
                      {speaker.avatar}
                    </div>
                  </div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">
                    {speaker.name}
                  </h3>
                  <p className="text-blue-600 font-medium mb-2">
                    {speaker.title}
                  </p>
                  <p className="text-gray-600 text-sm">{speaker.topic}</p>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* News Section */}
        <section className="py-16 bg-gray-50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center mb-12">
              <div>
                <h2 className="text-3xl font-bold text-gray-900 mb-4">
                  Tin t·ª©c & Th√¥ng b√°o
                </h2>
                <p className="text-gray-600">
                  C·∫≠p nh·∫≠t th√¥ng tin m·ªõi nh·∫•t v·ªÅ h·ªôi ngh·ªã
                </p>
              </div>
              <button className="text-blue-600 hover:text-blue-700 font-medium flex items-center">
                Xem t·∫•t c·∫£ <ChevronRight className="ml-1 w-4 h-4" />
              </button>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {news.map((article) => (
                <article
                  key={article.id}
                  className="bg-white rounded-2xl p-6 border border-gray-100 hover:shadow-lg transition-shadow duration-300 cursor-pointer group"
                >
                  <div className="flex items-center justify-between mb-4">
                    <span className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      {article.category}
                    </span>
                    <span className="text-sm text-gray-500">
                      {article.date}
                    </span>
                  </div>

                  <h3 className="text-lg font-semibold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors">
                    {article.title}
                  </h3>

                  <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                    {article.excerpt}
                  </p>

                  <button className="text-blue-600 hover:text-blue-700 font-medium text-sm flex items-center">
                    ƒê·ªçc th√™m <ChevronRight className="ml-1 w-3 h-3" />
                  </button>
                </article>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-20 bg-gradient-to-r from-blue-600 to-purple-600">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <h2 className="text-3xl md:text-4xl font-bold text-white mb-6">
              S·∫µn s√†ng tham gia h·ªôi ngh·ªã?
            </h2>
            <p className="text-xl text-blue-100 mb-8 max-w-2xl mx-auto">
              ƒêƒÉng k√Ω ngay h√¥m nay ƒë·ªÉ kh√¥ng b·ªè l·ª° c∆° h·ªôi k·∫øt n·ªëi v·ªõi c·ªông ƒë·ªìng
              nghi√™n c·ª©u h√†ng ƒë·∫ßu
            </p>
            <div className="flex flex-col sm:flex-row items-center justify-center gap-4">
              <button className="bg-white text-blue-600 px-8 py-4 rounded-xl hover:bg-gray-100 transition-colors font-semibold">
                ƒêƒÉng k√Ω tham d·ª±
              </button>
              <button className="border border-white text-white px-8 py-4 rounded-xl hover:bg-white/10 transition-colors font-semibold">
                T·∫£i brochure
              </button>
            </div>
          </div>
        </section>
      </div>
    </DefaultLayout>
  );
};

export default HomePage;

// frontend/src/pages/login.jsx
import React, { useState } from 'react';
import { Lock, Mail, Eye, EyeOff } from 'lucide-react';
import { Link } from 'react-router-dom';

const Login = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [error, setError] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();
    // Th√™m logic x·ª≠ l√Ω ƒëƒÉng nh·∫≠p 
    if (!email || !password) {
      setError('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.');
    } else {
      setError('');
      // G·ªçi API ho·∫∑c x·ª≠ l√Ω logic ƒëƒÉng nh·∫≠p
      console.log('ƒêƒÉng nh·∫≠p v·ªõi:', { email, password });
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full border border-gray-100">
        <div className="text-center mb-8">
          <div className="text-4xl mb-2">üèõÔ∏è</div>
          <h2 className="text-2xl font-bold text-gray-900">ƒêƒÉng nh·∫≠p</h2>
          <p className="text-gray-600">Ch√†o m·ª´ng b·∫°n tr·ªü l·∫°i v·ªõi H·ªôi Ngh·ªã Khoa H·ªçc 2025</p>
        </div>

        {error && (
          <div className="bg-red-50 text-red-600 p-3 rounded-lg mb-6 text-sm">
            {error}
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Email</label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <Mail className="w-5 h-5 text-gray-400" />
              </div>
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="nhapemail@university.edu.vn"
              />
            </div>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">M·∫≠t kh·∫©u</label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <Lock className="w-5 h-5 text-gray-400" />
              </div>
              <input
                type={showPassword ? 'text' : 'password'}
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="w-full pl-10 pr-10 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
              />
              <button
                type="button"
                onClick={() => setShowPassword(!showPassword)}
                className="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600"
              >
                {showPassword ? <EyeOff className="w-5 h-5" /> : <Eye className="w-5 h-5" />}
              </button>
            </div>
          </div>

          <div className="flex items-center justify-between text-sm">
            <div className="flex items-center">
              <input
                type="checkbox"
                id="remember"
                className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label htmlFor="remember" className="ml-2 text-gray-700">Ghi nh·ªõ ƒëƒÉng nh·∫≠p</label>
            </div>
            <Link to="/forgot-password" className="text-blue-600 hover:text-blue-700 font-medium">
              Qu√™n m·∫≠t kh·∫©u?
            </Link>
          </div>

          <button
            type="submit"
            className="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white py-2.5 rounded-lg hover:from-blue-700 hover:to-blue-800 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 font-semibold"
          >
            ƒêƒÉng nh·∫≠p
          </button>
        </form>

        <div className="text-center mt-6 text-gray-600">
          Ch∆∞a c√≥ t√†i kho·∫£n?{' '}
          <Link to="/register" className="text-blue-600 hover:text-blue-700 font-medium">
            ƒêƒÉng k√Ω ngay
          </Link>
        </div>
      </div>
    </div>
  );
};

export default Login;

// frontend/src/pages/register.jsx
import React, { useState } from "react";
import { Lock, Mail, User, Eye, EyeOff } from "lucide-react";
import { Link } from "react-router-dom";

const Register = () => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [error, setError] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();

    if (!name || !email || !password || !confirmPassword) {
      setError("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
      return;
    }

    if (password !== confirmPassword) {
      setError("M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp.");
      return;
    }

    setError("");
    // G·ªçi API ho·∫∑c x·ª≠ l√Ω ƒëƒÉng k√Ω ·ªü ƒë√¢y
    console.log("ƒêƒÉng k√Ω v·ªõi:", { name, email, password });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full border border-gray-100">
        <div className="text-center mb-8">
          <div className="text-4xl mb-2">üèõÔ∏è</div>
          <h2 className="text-2xl font-bold text-gray-900">ƒêƒÉng k√Ω</h2>
          <p className="text-gray-600">
            T·∫°o t√†i kho·∫£n ƒë·ªÉ tham gia H·ªôi Ngh·ªã Khoa H·ªçc 2025
          </p>
        </div>

        {error && (
          <div className="bg-red-50 text-red-600 p-3 rounded-lg mb-6 text-sm">
            {error}
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* H·ªç t√™n */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              H·ªç v√† t√™n
            </label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <User className="w-5 h-5 text-gray-400" />
              </div>
              <input
                type="text"
                value={name}
                onChange={(e) => setName(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="Nguy·ªÖn VƒÉn A"
              />
            </div>
          </div>

          {/* Email */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Email
            </label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <Mail className="w-5 h-5 text-gray-400" />
              </div>
              <input
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="nhapemail@university.edu.vn"
              />
            </div>
          </div>

          {/* M·∫≠t kh·∫©u */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              M·∫≠t kh·∫©u
            </label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <Lock className="w-5 h-5 text-gray-400" />
              </div>
              <input
                type={showPassword ? "text" : "password"}
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="w-full pl-10 pr-10 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
              />
            </div>
          </div>

          {/* X√°c nh·∫≠n m·∫≠t kh·∫©u */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              X√°c nh·∫≠n m·∫≠t kh·∫©u
            </label>
            <div className="relative">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <Lock className="w-5 h-5 text-gray-400" />
              </div>
              <input
                type={showPassword ? "text" : "password"}
                value={confirmPassword}
                onChange={(e) => setConfirmPassword(e.target.value)}
                className="w-full pl-10 pr-10 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
              />
              <button
                type="button"
                onClick={() => setShowPassword(!showPassword)}
                className="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600"
              >
                {showPassword ? (
                  <EyeOff className="w-5 h-5" />
                ) : (
                  <Eye className="w-5 h-5" />
                )}
              </button>
            </div>
          </div>

          <button
            type="submit"
            className="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white py-2.5 rounded-lg hover:from-blue-700 hover:to-blue-800 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 font-semibold"
          >
            ƒêƒÉng k√Ω
          </button>
        </form>

        <div className="text-center mt-6 text-gray-600">
          ƒê√£ c√≥ t√†i kho·∫£n?{" "}
          <Link to="/login" className="text-blue-600 hover:text-blue-700 font-medium">
            ƒêƒÉng nh·∫≠p
          </Link>
        </div>
      </div>
    </div>
  );
};

export default Register;

// frontend/src/App.jsx
import { BrowserRouter as Router, Routes, Route, useLocation } from "react-router-dom";
import { useEffect, useState } from "react";
import HomePage from "./pages/index";
import Login from "./pages/login";
import Register from "./pages/register";
import ForgotPassword from "./pages/forgot-password";
import NewsDetail from "./pages/news/[id]";
import AuthorList from "./pages/author/index";
import AuthorSubmit from "./pages/author/submit";
import PaperDetail from "./pages/author/paper/[id]";
import PaperEdit from "./pages/author/paper/[id]/edit";
import AuthorProfile from "./pages/author/profile";
import ReviewerList from "./pages/reviewer/index";
import ReviewDetail from "./pages/reviewer/review/[id]";
import ReviewerProfile from "./pages/reviewer/profile";
import NewsPage from "./pages/news/index";
import OrganizerDashboard from "./pages/organizer/index";
import OrganizerPapers from "./pages/organizer/papers/index";
import OrganizerPaperDetail from "./pages/organizer/papers/[id]";
import AssignReviewerPage from "./pages/organizer/papers/[id]/assign";
import OrganizerSchedule from "./pages/organizer/schedule";
import OrganizerInfo from "./pages/organizer/info";
import OrganizerDocuments from "./pages/organizer/documents";
import OrganizerReports from "./pages/organizer/reports";
import AdminDashboard from "./pages/admin/index";
import AdminUsers from "./pages/admin/users/index";
import AdminUserDetail from "./pages/admin/users/[id]";
import AdminSettings from "./pages/admin/settings";
import ProfilePage from "./pages/profile";
import NotificationsPage from "./pages/notifications";
import PageLoader from "@/components/PageLoader";

// wrapper ƒë·ªÉ hi·ªÉn th·ªã loader khi ƒë·ªïi route
function AppRoutes() {
  const location = useLocation();
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    setLoading(true);
    const timer = setTimeout(() => setLoading(false), 400); // gi·∫£ delay 0.4s
    return () => clearTimeout(timer);
  }, [location]);

  return (
    <>
      {loading && <PageLoader />}
      <Routes>
        {/* Trang c√¥ng c·ªông */}
        <Route path="/" element={<HomePage />} />
        <Route path="/login" element={<Login />} />
        <Route path="/register" element={<Register />} />
        <Route path="/forgot-password" element={<ForgotPassword />} />
        <Route path="/profile" element={<ProfilePage />} />
        <Route path="/notifications" element={<NotificationsPage />} />

        {/* Trang tin t·ª©c */}
        <Route path="/news/:id" element={<NewsDetail />} />
        <Route path="/news" element={<NewsPage />} />

        {/* Trang t√°c gi·∫£ */}
        <Route path="/author" element={<AuthorList />} />
        <Route path="/author/submit" element={<AuthorSubmit />} />
        <Route path="/author/paper/:id" element={<PaperDetail />} />
        <Route path="/author/paper/:id/edit" element={<PaperEdit />} />
        <Route path="/author/profile" element={<AuthorProfile />} />

        {/* Trang reviewer */}
        <Route path="/reviewer" element={<ReviewerList />} />
        <Route path="/reviewer/review/:id" element={<ReviewDetail />} />
        <Route path="/reviewer/profile" element={<ReviewerProfile />} />

        {/* Trang t·ªï ch·ª©c */}
        <Route path="/organizer" element={<OrganizerDashboard />} />
        <Route path="/organizer/papers" element={<OrganizerPapers />} />
        <Route path="/organizer/papers/:id" element={<OrganizerPaperDetail />} />
        <Route path="/organizer/papers/:id/assign" element={<AssignReviewerPage />} />
        <Route path="/organizer/schedule" element={<OrganizerSchedule />} />
        <Route path="/organizer/info" element={<OrganizerInfo />} />
        <Route path="/organizer/documents" element={<OrganizerDocuments />} />
        <Route path="/organizer/reports" element={<OrganizerReports />} />

        {/* Trang qu·∫£n tr·ªã */}
        <Route path="/admin" element={<AdminDashboard />} />
        <Route path="/admin/users" element={<AdminUsers />} />
        <Route path="/admin/users/:id" element={<AdminUserDetail />} />
        <Route path="/admin/settings" element={<AdminSettings />} />
      </Routes>
    </>
  );
}

function App() {
  return (
    <Router>
      <AppRoutes />
    </Router>
  );
}

export default App;

// frontend/src/pages/organizer/papers/[id]/assign.jsx
import React, { useState } from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { User } from "lucide-react";

// üîπ Dummy data (sau n√†y load t·ª´ API)
const paper = {
  id: 1,
  title: "·ª®ng d·ª•ng AI trong Y t·∫ø",
  author: "Nguy·ªÖn VƒÉn An",
};

const reviewers = [
  { id: 1, name: "Reviewer 1", expertise: "AI, Y t·∫ø", assignedPapers: 2 },
  { id: 2, name: "Reviewer 2", expertise: "Blockchain, B·∫£o m·∫≠t", assignedPapers: 1 },
  { id: 3, name: "Reviewer 3", expertise: "IoT, M·∫°ng", assignedPapers: 0 },
  { id: 4, name: "Reviewer 4", expertise: "Machine Learning", assignedPapers: 3 },
];

const AssignReviewerPage = () => {
  const [selected, setSelected] = useState([]);

  const toggleSelect = (id) => {
    if (selected.includes(id)) {
      setSelected(selected.filter((rid) => rid !== id));
    } else {
      setSelected([...selected, id]);
    }
  };

  const handleAssign = () => {
    console.log("Ph√¢n c√¥ng cho reviewers:", selected);
    alert(`‚úÖ ƒê√£ ph√¢n c√¥ng cho reviewer IDs: ${selected.join(", ")}`);
  };

  return (
    <DefaultLayout>
      <div className="max-w-5xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">
          Ph√¢n c√¥ng Reviewer ‚Äî B√†i b√°o #{paper.id}
        </h1>

        {/* Th√¥ng tin b√†i b√°o */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>Th√¥ng tin b√†i b√°o</CardTitle>
          </CardHeader>
          <CardContent>
            <p className="font-semibold">{paper.title}</p>
            <p className="text-sm text-gray-600">T√°c gi·∫£: {paper.author}</p>
          </CardContent>
        </Card>

        {/* Danh s√°ch reviewer */}
        <Card>
          <CardHeader>
            <CardTitle>Danh s√°ch Reviewer</CardTitle>
          </CardHeader>
          <CardContent>
            <table className="min-w-full border border-gray-200 rounded-lg">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                    Ch·ªçn
                  </th>
                  <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                    Reviewer
                  </th>
                  <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                    Chuy√™n m√¥n
                  </th>
                  <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                    B√†i ƒëang ph·∫£n bi·ªán
                  </th>
                </tr>
              </thead>
              <tbody>
                {reviewers.map((rev) => (
                  <tr
                    key={rev.id}
                    className="hover:bg-gray-50 transition-colors"
                  >
                    <td className="px-4 py-3 border-b">
                      <input
                        type="checkbox"
                        checked={selected.includes(rev.id)}
                        onChange={() => toggleSelect(rev.id)}
                      />
                    </td>
                    <td className="px-4 py-3 border-b flex items-center space-x-2">
                      <User className="w-4 h-4 text-gray-500" />
                      <span>{rev.name}</span>
                    </td>
                    <td className="px-4 py-3 border-b text-sm">{rev.expertise}</td>
                    <td className="px-4 py-3 border-b text-sm text-center">
                      {rev.assignedPapers}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>

            {/* N√∫t ph√¢n c√¥ng */}
            <div className="mt-6 flex justify-end">
              <Button onClick={handleAssign} disabled={selected.length === 0}>
                Ph√¢n c√¥ng Reviewer
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </DefaultLayout>
  );
};

export default AssignReviewerPage;

// frontend/src/pages/organizer/papers/[id].jsx
import React from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { FileText, User, MessageSquare } from "lucide-react";

// üîπ Dummy data (sau n√†y s·∫Ω fetch t·ª´ API)
const paperDetail = {
  id: 1,
  title: "·ª®ng d·ª•ng AI trong Y t·∫ø",
  authors: ["Nguy·ªÖn VƒÉn An", "Tr·∫ßn Th·ªã B√¨nh"],
  abstract:
    "B√†i b√°o nghi√™n c·ª©u v·ªÅ ·ª©ng d·ª•ng tr√≠ tu·ªá nh√¢n t·∫°o trong ch·∫©n ƒëo√°n h√¨nh ·∫£nh y t·∫ø, v·ªõi m·ª•c ti√™u n√¢ng cao ƒë·ªô ch√≠nh x√°c v√† gi·∫£m chi ph√≠.",
  keywords: ["AI", "Y t·∫ø", "Machine Learning"],
  status: "ƒêang ph·∫£n bi·ªán",
  fileUrl: "#",
  reviewers: [
    {
      id: 1,
      name: "Reviewer 1",
      score: 8,
      comment: "B√†i vi·∫øt c√≥ √Ω t∆∞·ªüng m·ªõi, c·∫ßn ch·ªânh s·ª≠a ph·∫ßn th√≠ nghi·ªám.",
    },
    {
      id: 2,
      name: "Reviewer 2",
      score: 7,
      comment: "C·∫ßn b·ªï sung th√™m t√†i li·ªáu tham kh·∫£o v√† ph√¢n t√≠ch s√¢u h∆°n.",
    },
  ],
};

const OrganizerPaperDetail = () => {
  return (
    <DefaultLayout>
      <div className="max-w-5xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">Chi ti·∫øt b√†i b√°o #{paperDetail.id}</h1>

        {/* Th√¥ng tin b√†i b√°o */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>Th√¥ng tin b√†i b√°o</CardTitle>
          </CardHeader>
          <CardContent>
            <h2 className="text-xl font-semibold mb-2">{paperDetail.title}</h2>
            <p className="text-sm text-gray-600 mb-4">
              <User className="inline w-4 h-4 mr-1" />
              {paperDetail.authors.join(", ")}
            </p>
            <p className="mb-4">{paperDetail.abstract}</p>
            <p className="text-sm text-gray-700 mb-2">
              <strong>T·ª´ kh√≥a:</strong> {paperDetail.keywords.join(", ")}
            </p>
            <a
              href={paperDetail.fileUrl}
              className="text-blue-600 hover:underline text-sm flex items-center"
            >
              <FileText className="w-4 h-4 mr-1" /> T·∫£i file b√†i b√°o
            </a>
          </CardContent>
        </Card>

        {/* Ph·∫£n bi·ªán */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>K·∫øt qu·∫£ ph·∫£n bi·ªán</CardTitle>
          </CardHeader>
          <CardContent>
            {paperDetail.reviewers.map((rev) => (
              <div
                key={rev.id}
                className="border p-4 rounded-lg mb-4 bg-gray-50"
              >
                <p className="font-semibold">
                  <MessageSquare className="inline w-4 h-4 mr-1 text-gray-500" />
                  {rev.name} ‚Äî ƒêi·ªÉm: {rev.score}/10
                </p>
                <p className="text-gray-700 mt-2">{rev.comment}</p>
              </div>
            ))}
          </CardContent>
        </Card>

        {/* H√†nh ƒë·ªông */}
        <Card>
          <CardHeader>
            <CardTitle>Quy·∫øt ƒë·ªãnh cu·ªëi c√πng</CardTitle>
          </CardHeader>
          <CardContent className="flex gap-4">
            <Button className="bg-green-600 hover:bg-green-700">
              ‚úÖ Ch·∫•p nh·∫≠n
            </Button>
            <Button variant="destructive">‚ùå T·ª´ ch·ªëi</Button>
          </CardContent>
        </Card>
      </div>
    </DefaultLayout>
  );
};

export default OrganizerPaperDetail;

// frontend/src/pages/organizer/papers/index.jsx
import React from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

// üîπ Dummy data (sau n√†y thay b·∫±ng API)
const papers = [
  {
    id: 1,
    title: "·ª®ng d·ª•ng AI trong Y t·∫ø",
    author: "Nguy·ªÖn VƒÉn An",
    status: "ƒêang ph·∫£n bi·ªán",
  },
  {
    id: 2,
    title: "Blockchain trong Gi√°o d·ª•c",
    author: "Tr·∫ßn Th·ªã B√¨nh",
    status: "Ch·ªù ph√¢n c√¥ng",
  },
  {
    id: 3,
    title: "H·ªá th·ªëng IoT th√¥ng minh",
    author: "L√™ VƒÉn C∆∞·ªùng",
    status: "Ch·∫•p nh·∫≠n",
  },
];

const OrganizerPapers = () => {
  return (
    <DefaultLayout>
      <div className="max-w-7xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">Qu·∫£n l√Ω b√†i b√°o</h1>

        <Card>
          <CardHeader>
            <CardTitle>Danh s√°ch b√†i b√°o</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <table className="min-w-full border border-gray-200 rounded-lg">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                      ID
                    </th>
                    <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                      Ti√™u ƒë·ªÅ
                    </th>
                    <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                      T√°c gi·∫£
                    </th>
                    <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                      Tr·∫°ng th√°i
                    </th>
                    <th className="px-4 py-3 text-center text-sm font-semibold text-gray-700 border-b">
                      H√†nh ƒë·ªông
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {papers.map((paper) => (
                    <tr
                      key={paper.id}
                      className="hover:bg-gray-50 transition-colors"
                    >
                      <td className="px-4 py-3 text-sm border-b">{paper.id}</td>
                      <td className="px-4 py-3 text-sm border-b">
                        {paper.title}
                      </td>
                      <td className="px-4 py-3 text-sm border-b">
                        {paper.author}
                      </td>
                      <td className="px-4 py-3 text-sm border-b">
                        <span
                          className={`px-2 py-1 rounded text-xs font-medium ${
                            paper.status === "Ch·∫•p nh·∫≠n"
                              ? "bg-green-100 text-green-700"
                              : paper.status === "ƒêang ph·∫£n bi·ªán"
                              ? "bg-yellow-100 text-yellow-700"
                              : "bg-gray-100 text-gray-700"
                          }`}
                        >
                          {paper.status}
                        </span>
                      </td>
                      <td className="px-4 py-3 text-sm border-b text-center space-x-2">
                        <Button asChild size="sm" variant="outline">
                          <a href={`/organizer/papers/${paper.id}`}>Chi ti·∫øt</a>
                        </Button>
                        <Button asChild size="sm">
                          <a href={`/organizer/papers/${paper.id}/assign`}>
                            Ph√¢n c√¥ng
                          </a>
                        </Button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      </div>
    </DefaultLayout>
  );
};

export default OrganizerPapers;

// frontend/src/pages/organizer/documents.jsx
import React, { useState } from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { FileText } from "lucide-react";

const OrganizerDocuments = () => {
  const [form, setForm] = useState({
    type: "invitation",
    name: "",
    role: "speaker",
  });
  const [message, setMessage] = useState("");

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleGenerate = () => {
    console.log("üìÑ Sinh t√†i li·ªáu:", form);
    setMessage(
      `‚úÖ ƒê√£ sinh ${form.type === "invitation" ? "gi·∫•y m·ªùi" : "gi·∫•y ch·ª©ng nh·∫≠n"} cho ${form.name} (${form.role})`
    );
  };

  return (
    <DefaultLayout>
      <div className="max-w-3xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">In gi·∫•y m·ªùi & gi·∫•y ch·ª©ng nh·∫≠n</h1>

        {message && (
          <div className="mb-6 p-3 bg-green-50 text-green-700 rounded-lg text-sm">
            {message}
          </div>
        )}

        <Card>
          <CardHeader>
            <CardTitle>T·∫°o t√†i li·ªáu</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-6">
              {/* Lo·∫°i t√†i li·ªáu */}
              <div>
                <label className="block text-sm font-medium mb-2">Lo·∫°i t√†i li·ªáu</label>
                <select
                  name="type"
                  value={form.type}
                  onChange={handleChange}
                  className="w-full border rounded-lg px-3 py-2"
                >
                  <option value="invitation">üì© Gi·∫•y m·ªùi</option>
                  <option value="certificate">üèÖ Gi·∫•y ch·ª©ng nh·∫≠n</option>
                </select>
              </div>

              {/* T√™n ng∆∞·ªùi nh·∫≠n */}
              <div>
                <label className="block text-sm font-medium mb-2">H·ªç t√™n</label>
                <input
                  type="text"
                  name="name"
                  value={form.name}
                  onChange={handleChange}
                  placeholder="Nh·∫≠p h·ªç t√™n"
                  className="w-full border rounded-lg px-3 py-2"
                />
              </div>

              {/* Vai tr√≤ */}
              <div>
                <label className="block text-sm font-medium mb-2">Vai tr√≤</label>
                <select
                  name="role"
                  value={form.role}
                  onChange={handleChange}
                  className="w-full border rounded-lg px-3 py-2"
                >
                  <option value="speaker">üë®‚Äçüè´ Di·ªÖn gi·∫£</option>
                  <option value="author">‚úçÔ∏è T√°c gi·∫£ b√°o c√°o</option>
                  <option value="reviewer">üìù Ph·∫£n bi·ªán vi√™n</option>
                  <option value="attendee">üë• Ng∆∞·ªùi tham d·ª±</option>
                </select>
              </div>

              {/* N√∫t t·∫°o */}
              <div className="flex justify-end">
                <Button onClick={handleGenerate}>
                  <FileText className="w-4 h-4 mr-2" />
                  T·∫°o PDF
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </DefaultLayout>
  );
};

export default OrganizerDocuments;

// frontend/src/pages/organizer/index.jsx
import React from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Users, FileText, CheckCircle2, XCircle } from "lucide-react";
import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from "recharts";

// üîπ Dummy data
const stats = [
  { label: "B√†i b√°o", value: 128, icon: FileText, color: "text-blue-600" },
  { label: "Reviewer", value: 35, icon: Users, color: "text-purple-600" },
  { label: "ƒê√£ ch·∫•p nh·∫≠n", value: 56, icon: CheckCircle2, color: "text-green-600" },
  { label: "T·ª´ ch·ªëi", value: 18, icon: XCircle, color: "text-red-600" },
];

// üîπ Data cho PieChart
const chartData = [
  { name: "Ch·ªù ph·∫£n bi·ªán", value: 40 },
  { name: "ƒêang ph·∫£n bi·ªán", value: 30 },
  { name: "Y√™u c·∫ßu s·ª≠a", value: 15 },
  { name: "Ch·∫•p nh·∫≠n", value: 25 },
  { name: "T·ª´ ch·ªëi", value: 18 },
];

const COLORS = ["#60A5FA", "#A78BFA", "#FACC15", "#34D399", "#F87171"];

const OrganizerDashboard = () => {
  return (
    <DefaultLayout>
      <div className="max-w-7xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">Dashboard Ban t·ªï ch·ª©c</h1>

        {/* Th·ªëng k√™ nhanh */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-10">
          {stats.map((item, idx) => (
            <Card key={idx} className="shadow-sm border">
              <CardContent className="flex items-center p-6">
                <item.icon className={`w-10 h-10 mr-4 ${item.color}`} />
                <div>
                  <p className="text-2xl font-bold">{item.value}</p>
                  <p className="text-gray-600">{item.label}</p>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Bi·ªÉu ƒë·ªì tr·∫°ng th√°i b√†i b√°o */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-10">
          <Card className="shadow-sm border">
            <CardHeader>
              <CardTitle>Tr·∫°ng th√°i b√†i b√°o</CardTitle>
            </CardHeader>
            <CardContent>
              <ResponsiveContainer width="100%" height={300}>
                <PieChart>
                  <Pie
                    data={chartData}
                    cx="50%"
                    cy="50%"
                    labelLine={false}
                    outerRadius={120}
                    fill="#8884d8"
                    dataKey="value"
                    label={({ name, percent }) =>
                      `${name} ${(percent * 100).toFixed(0)}%`
                    }
                  >
                    {chartData.map((_, index) => (
                      <Cell
                        key={`cell-${index}`}
                        fill={COLORS[index % COLORS.length]}
                      />
                    ))}
                  </Pie>
                  <Tooltip />
                </PieChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>

          {/* Th√¥ng b√°o g·∫ßn ƒë√¢y */}
          <Card className="shadow-sm border">
            <CardHeader>
              <CardTitle>Th√¥ng b√°o g·∫ßn ƒë√¢y</CardTitle>
            </CardHeader>
            <CardContent>
              <ul className="space-y-3">
                <li className="p-3 border rounded-lg hover:bg-gray-50 transition">
                  üì¢ Gia h·∫°n th·ªùi gian n·ªôp b√†i ƒë·∫øn 15/10/2025
                </li>
                <li className="p-3 border rounded-lg hover:bg-gray-50 transition">
                  üì¢ L·ªãch tr√¨nh b√°o c√°o s·∫Ω c√¥ng b·ªë v√†o tu·∫ßn t·ªõi
                </li>
                <li className="p-3 border rounded-lg hover:bg-gray-50 transition">
                  üì¢ C·∫≠p nh·∫≠t danh s√°ch di·ªÖn gi·∫£ ch√≠nh
                </li>
              </ul>
            </CardContent>
          </Card>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default OrganizerDashboard;

// frontend/src/pages/organizer/info.jsx
import React, { useState } from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

// üîπ Dummy initial data
const initialInfo = {
  name: "H·ªôi ngh·ªã Khoa h·ªçc Qu·ªëc t·∫ø 2025",
  theme: "C√¥ng ngh·ªá & ƒê·ªïi m·ªõi",
  date: "2025-11-20",
  location: "ƒê·∫°i h·ªçc B√°ch Khoa H√† N·ªôi",
  description:
    "H·ªôi ngh·ªã quy t·ª• c√°c nh√† khoa h·ªçc, gi·∫£ng vi√™n, nghi√™n c·ª©u sinh, sinh vi√™n ƒë·ªÉ trao ƒë·ªïi c√°c k·∫øt qu·∫£ nghi√™n c·ª©u m·ªõi nh·∫•t.",
  news: [
    "Gia h·∫°n h·∫°n n·ªôp b√†i ƒë·∫øn 15/10/2025",
    "C·∫≠p nh·∫≠t danh s√°ch di·ªÖn gi·∫£ ch√≠nh",
  ],
};

const OrganizerInfo = () => {
  const [info, setInfo] = useState(initialInfo);
  const [message, setMessage] = useState("");

  const handleChange = (e) => {
    setInfo({ ...info, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("C·∫≠p nh·∫≠t th√¥ng tin h·ªôi ngh·ªã:", info);
    setMessage("‚úÖ Th√¥ng tin h·ªôi ngh·ªã ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!");
  };

  return (
    <DefaultLayout>
      <div className="max-w-5xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">C·∫≠p nh·∫≠t th√¥ng tin h·ªôi ngh·ªã</h1>

        {message && (
          <div className="mb-6 p-3 bg-green-50 text-green-700 rounded-lg text-sm">
            {message}
          </div>
        )}

        <Card>
          <CardHeader>
            <CardTitle>Th√¥ng tin s·ª± ki·ªán</CardTitle>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-6">
              <div>
                <label className="block text-sm font-medium mb-2">T√™n s·ª± ki·ªán</label>
                <input
                  type="text"
                  name="name"
                  value={info.name}
                  onChange={handleChange}
                  className="w-full border rounded-lg px-4 py-2"
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">Ch·ªß ƒë·ªÅ</label>
                <input
                  type="text"
                  name="theme"
                  value={info.theme}
                  onChange={handleChange}
                  className="w-full border rounded-lg px-4 py-2"
                />
              </div>

              <div className="grid md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium mb-2">Ng√†y t·ªï ch·ª©c</label>
                  <input
                    type="date"
                    name="date"
                    value={info.date}
                    onChange={handleChange}
                    className="w-full border rounded-lg px-4 py-2"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium mb-2">ƒê·ªãa ƒëi·ªÉm</label>
                  <input
                    type="text"
                    name="location"
                    value={info.location}
                    onChange={handleChange}
                    className="w-full border rounded-lg px-4 py-2"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">M√¥ t·∫£</label>
                <textarea
                  name="description"
                  rows={4}
                  value={info.description}
                  onChange={handleChange}
                  className="w-full border rounded-lg px-4 py-2"
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">Tin t·ª©c</label>
                <textarea
                  name="news"
                  rows={3}
                  value={info.news.join("\n")}
                  onChange={(e) =>
                    setInfo({ ...info, news: e.target.value.split("\n") })
                  }
                  className="w-full border rounded-lg px-4 py-2"
                />
                <p className="text-sm text-gray-500 mt-1">
                  M·ªói d√≤ng l√† m·ªôt tin t·ª©c
                </p>
              </div>

              <div className="flex justify-end">
                <Button type="submit">üíæ L∆∞u th√¥ng tin</Button>
              </div>
            </form>
          </CardContent>
        </Card>
      </div>
    </DefaultLayout>
  );
};

export default OrganizerInfo;

// frontend/src/pages/organizer/reports.jsx
import React from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  PieChart,
  Pie,
  Cell,
  Tooltip,
  ResponsiveContainer,
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Legend,
} from "recharts";
import { FileDown } from "lucide-react";

// üîπ Dummy data
const paperStatusData = [
  { name: "Ch·ªù ph·∫£n bi·ªán", value: 10 },
  { name: "ƒêang ph·∫£n bi·ªán", value: 8 },
  { name: "Y√™u c·∫ßu s·ª≠a", value: 5 },
  { name: "Ch·∫•p nh·∫≠n", value: 12 },
  { name: "T·ª´ ch·ªëi", value: 3 },
];

const topicData = [
  { topic: "AI", count: 7 },
  { topic: "Blockchain", count: 5 },
  { topic: "IoT", count: 4 },
  { topic: "Y t·∫ø", count: 6 },
  { topic: "Kh√°c", count: 8 },
];

const COLORS = ["#8884d8", "#82ca9d", "#ffc658", "#ff7f7f", "#a4de6c"];

const OrganizerReports = () => {
  const handleExport = (type) => {
    console.log(`üìä Xu·∫•t b√°o c√°o d·∫°ng: ${type}`);
    alert(`‚úÖ ƒê√£ xu·∫•t b√°o c√°o (${type})`);
  };

  return (
    <DefaultLayout>
      <div className="max-w-6xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">Th·ªëng k√™ & B√°o c√°o</h1>

        <div className="grid md:grid-cols-2 gap-8 mb-10">
          {/* Bi·ªÉu ƒë·ªì tr·∫°ng th√°i */}
          <Card>
            <CardHeader>
              <CardTitle>Th·ªëng k√™ theo tr·∫°ng th√°i</CardTitle>
            </CardHeader>
            <CardContent>
              <ResponsiveContainer width="100%" height={250}>
                <PieChart>
                  <Pie
                    data={paperStatusData}
                    cx="50%"
                    cy="50%"
                    labelLine={false}
                    outerRadius={90}
                    dataKey="value"
                  >
                    {paperStatusData.map((entry, index) => (
                      <Cell
                        key={`cell-${index}`}
                        fill={COLORS[index % COLORS.length]}
                      />
                    ))}
                  </Pie>
                  <Tooltip />
                </PieChart>
              </ResponsiveContainer>
              <ul className="mt-4 space-y-1 text-sm">
                {paperStatusData.map((s, i) => (
                  <li key={i} className="flex items-center space-x-2">
                    <span
                      className="inline-block w-3 h-3 rounded"
                      style={{ backgroundColor: COLORS[i % COLORS.length] }}
                    />
                    <span>
                      {s.name}: {s.value}
                    </span>
                  </li>
                ))}
              </ul>
            </CardContent>
          </Card>

          {/* Bi·ªÉu ƒë·ªì theo ch·ªß ƒë·ªÅ */}
          <Card>
            <CardHeader>
              <CardTitle>Th·ªëng k√™ theo ch·ªß ƒë·ªÅ</CardTitle>
            </CardHeader>
            <CardContent>
              <ResponsiveContainer width="100%" height={250}>
                <BarChart data={topicData}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="topic" />
                  <YAxis />
                  <Tooltip />
                  <Legend />
                  <Bar dataKey="count" fill="#8884d8" />
                </BarChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>
        </div>

        {/* Xu·∫•t b√°o c√°o */}
        <Card>
          <CardHeader>
            <CardTitle>Xu·∫•t b√°o c√°o</CardTitle>
          </CardHeader>
          <CardContent className="flex gap-4">
            <Button onClick={() => handleExport("PDF")}>
              <FileDown className="w-4 h-4 mr-2" /> Xu·∫•t PDF
            </Button>
            <Button onClick={() => handleExport("Excel")}>
              <FileDown className="w-4 h-4 mr-2" /> Xu·∫•t Excel
            </Button>
          </CardContent>
        </Card>
      </div>
    </DefaultLayout>
  );
};

export default OrganizerReports;

// frontend/src/pages/organizer/schedule.jsx
import React, { useState } from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Calendar, Clock, MapPin, User } from "lucide-react";

// üîπ Dummy data (b√†i b√°o ƒë√£ ch·∫•p nh·∫≠n)
const acceptedPapers = [
  { id: 1, title: "·ª®ng d·ª•ng AI trong Y t·∫ø", presenter: "Nguy·ªÖn VƒÉn An" },
  { id: 2, title: "Blockchain trong Gi√°o d·ª•c", presenter: "Tr·∫ßn Th·ªã B√¨nh" },
  { id: 3, title: "H·ªá th·ªëng IoT th√¥ng minh", presenter: "L√™ VƒÉn C∆∞·ªùng" },
];

const OrganizerSchedule = () => {
  const [schedule, setSchedule] = useState([]);
  const [form, setForm] = useState({
    paperId: "",
    date: "",
    time: "",
    room: "",
  });

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleAdd = () => {
    const paper = acceptedPapers.find((p) => p.id === parseInt(form.paperId));
    if (!paper || !form.date || !form.time || !form.room) {
      alert("‚ö†Ô∏è Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!");
      return;
    }

    const newItem = {
      id: schedule.length + 1,
      paperTitle: paper.title,
      presenter: paper.presenter,
      date: form.date,
      time: form.time,
      room: form.room,
    };

    setSchedule([...schedule, newItem]);
    setForm({ paperId: "", date: "", time: "", room: "" });
  };

  return (
    <DefaultLayout>
      <div className="max-w-6xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">L·∫≠p l·ªãch tr√¨nh b√°o c√°o</h1>

        {/* Form ph√¢n c√¥ng */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>Th√™m l·ªãch tr√¨nh m·ªõi</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium mb-2">
                  Ch·ªçn b√†i b√°o
                </label>
                <select
                  name="paperId"
                  value={form.paperId}
                  onChange={handleChange}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2"
                >
                  <option value="">-- Ch·ªçn b√†i b√°o --</option>
                  {acceptedPapers.map((p) => (
                    <option key={p.id} value={p.id}>
                      {p.title} ‚Äî {p.presenter}
                    </option>
                  ))}
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">Ng√†y</label>
                <input
                  type="date"
                  name="date"
                  value={form.date}
                  onChange={handleChange}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2"
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">Gi·ªù</label>
                <input
                  type="time"
                  name="time"
                  value={form.time}
                  onChange={handleChange}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2"
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">Ph√≤ng</label>
                <input
                  type="text"
                  name="room"
                  placeholder="VD: A101"
                  value={form.room}
                  onChange={handleChange}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2"
                />
              </div>
            </div>

            <div className="mt-6 flex justify-end">
              <Button onClick={handleAdd}>‚ûï Th√™m l·ªãch tr√¨nh</Button>
            </div>
          </CardContent>
        </Card>

        {/* B·∫£ng l·ªãch tr√¨nh */}
        <Card>
          <CardHeader>
            <CardTitle>Danh s√°ch l·ªãch tr√¨nh</CardTitle>
          </CardHeader>
          <CardContent>
            {schedule.length === 0 ? (
              <p className="text-gray-500">Ch∆∞a c√≥ l·ªãch tr√¨nh n√†o.</p>
            ) : (
              <div className="overflow-x-auto">
                <table className="min-w-full border border-gray-200 rounded-lg">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                        B√†i b√°o
                      </th>
                      <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                        Di·ªÖn gi·∫£
                      </th>
                      <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                        <Calendar className="inline w-4 h-4 mr-1" /> Ng√†y
                      </th>
                      <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                        <Clock className="inline w-4 h-4 mr-1" /> Gi·ªù
                      </th>
                      <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                        <MapPin className="inline w-4 h-4 mr-1" /> Ph√≤ng
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    {schedule.map((item) => (
                      <tr
                        key={item.id}
                        className="hover:bg-gray-50 transition-colors"
                      >
                        <td className="px-4 py-3 border-b">{item.paperTitle}</td>
                        <td className="px-4 py-3 border-b">{item.presenter}</td>
                        <td className="px-4 py-3 border-b">{item.date}</td>
                        <td className="px-4 py-3 border-b">{item.time}</td>
                        <td className="px-4 py-3 border-b">{item.room}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </DefaultLayout>
  );
};

export default OrganizerSchedule;

// frontend/src/pages/admin/users/[id].jsx
import React, { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { User, Mail, Shield } from "lucide-react";

// üîπ Dummy data (sau n√†y s·∫Ω fetch t·ª´ API)
const users = [
  { id: 1, name: "Nguy·ªÖn VƒÉn An", email: "an@example.com", role: "T√°c gi·∫£" },
  { id: 2, name: "Tr·∫ßn Th·ªã B√¨nh", email: "binh@example.com", role: "Reviewer" },
  { id: 3, name: "L√™ VƒÉn C∆∞·ªùng", email: "cuong@example.com", role: "Ban t·ªï ch·ª©c" },
  { id: 4, name: "Admin H·ªá th·ªëng", email: "admin@example.com", role: "Admin" },
];

const AdminUserDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const user = users.find((u) => u.id === parseInt(id));

  const [role, setRole] = useState(user?.role || "");

  if (!user) {
    return (
      <DefaultLayout>
        <div className="max-w-3xl mx-auto py-10 px-4">
          <p className="text-red-500">‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng.</p>
        </div>
      </DefaultLayout>
    );
  }

  const handleSave = () => {
    console.log(`üíæ L∆∞u thay ƒë·ªïi role c·ªßa user #${id}: ${role}`);
    alert(`‚úÖ Vai tr√≤ c·ªßa ${user.name} ƒë√£ ƒë∆∞·ª£c ƒë·ªïi th√†nh ${role}`);
  };

  const handleDelete = () => {
    if (window.confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ${user.name}?`)) {
      console.log(`üóëÔ∏è X√≥a user #${id}`);
      alert(`‚ùå ƒê√£ x√≥a ${user.name}`);
      navigate("/admin/users");
    }
  };

  return (
    <DefaultLayout>
      <div className="max-w-3xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">Chi ti·∫øt ng∆∞·ªùi d√πng</h1>

        <Card>
          <CardHeader>
            <CardTitle>Th√¥ng tin c√° nh√¢n</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <p className="flex items-center text-gray-700">
              <User className="w-5 h-5 mr-2 text-gray-500" />
              <span className="font-medium">H·ªç t√™n:</span>&nbsp; {user.name}
            </p>
            <p className="flex items-center text-gray-700">
              <Mail className="w-5 h-5 mr-2 text-gray-500" />
              <span className="font-medium">Email:</span>&nbsp; {user.email}
            </p>
            <div className="flex items-center text-gray-700">
              <Shield className="w-5 h-5 mr-2 text-gray-500" />
              <span className="font-medium">Vai tr√≤:</span>
              <select
                className="ml-2 border rounded-lg px-3 py-1"
                value={role}
                onChange={(e) => setRole(e.target.value)}
              >
                <option value="T√°c gi·∫£">T√°c gi·∫£</option>
                <option value="Reviewer">Reviewer</option>
                <option value="Ban t·ªï ch·ª©c">Ban t·ªï ch·ª©c</option>
                <option value="Admin">Admin</option>
              </select>
            </div>
          </CardContent>
        </Card>

        {/* H√†nh ƒë·ªông */}
        <div className="flex gap-4 mt-6">
          <Button onClick={handleSave}>üíæ L∆∞u thay ƒë·ªïi</Button>
          <Button variant="destructive" onClick={handleDelete}>
            üóëÔ∏è X√≥a ng∆∞·ªùi d√πng
          </Button>
          <Button variant="outline" onClick={() => navigate("/admin/users")}>
            ‚Ü©Ô∏è Quay l·∫°i
          </Button>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default AdminUserDetail;

// frontend/src/pages/admin/users/index.jsx
import React from "react";
import { Link } from "react-router-dom";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { UserPlus, Eye } from "lucide-react";

// üîπ Dummy data
const users = [
  { id: 1, name: "Nguy·ªÖn VƒÉn An", email: "an@example.com", role: "T√°c gi·∫£" },
  { id: 2, name: "Tr·∫ßn Th·ªã B√¨nh", email: "binh@example.com", role: "Reviewer" },
  { id: 3, name: "L√™ VƒÉn C∆∞·ªùng", email: "cuong@example.com", role: "Ban t·ªï ch·ª©c" },
  { id: 4, name: "Admin H·ªá th·ªëng", email: "admin@example.com", role: "Admin" },
];

const AdminUsers = () => {
  return (
    <DefaultLayout>
      <div className="max-w-6xl mx-auto py-10 px-4">
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-3xl font-bold">Qu·∫£n l√Ω ng∆∞·ªùi d√πng</h1>
          <Button>
            <UserPlus className="w-4 h-4 mr-2" /> Th√™m ng∆∞·ªùi d√πng
          </Button>
        </div>

        <Card>
          <CardHeader>
            <CardTitle>Danh s√°ch ng∆∞·ªùi d√πng</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <table className="min-w-full border border-gray-200 rounded-lg">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                      ID
                    </th>
                    <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                      H·ªç t√™n
                    </th>
                    <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                      Email
                    </th>
                    <th className="px-4 py-3 text-left text-sm font-semibold text-gray-700 border-b">
                      Vai tr√≤
                    </th>
                    <th className="px-4 py-3 text-center text-sm font-semibold text-gray-700 border-b">
                      H√†nh ƒë·ªông
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {users.map((user) => (
                    <tr
                      key={user.id}
                      className="hover:bg-gray-50 transition-colors"
                    >
                      <td className="px-4 py-3 border-b">{user.id}</td>
                      <td className="px-4 py-3 border-b">{user.name}</td>
                      <td className="px-4 py-3 border-b">{user.email}</td>
                      <td className="px-4 py-3 border-b">{user.role}</td>
                      <td className="px-4 py-3 border-b text-center">
                        <Link to={`/admin/users/${user.id}`}>
                          <Button variant="outline" size="sm">
                            <Eye className="w-4 h-4 mr-1" /> Xem
                          </Button>
                        </Link>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      </div>
    </DefaultLayout>
  );
};

export default AdminUsers;

// frontend/src/pages/admin/index.jsx
import React from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  Users,
  UserCheck,
  UserCog,
  Settings,
} from "lucide-react";
import {
  PieChart,
  Pie,
  Cell,
  Tooltip,
  ResponsiveContainer,
} from "recharts";
import { Link } from "react-router-dom";

// üîπ Dummy data
const roleStats = [
  { name: "T√°c gi·∫£", value: 50 },
  { name: "Reviewer", value: 20 },
  { name: "Ban t·ªï ch·ª©c", value: 10 },
  { name: "Admin", value: 3 },
];

const COLORS = ["#8884d8", "#82ca9d", "#ffc658", "#ff7f7f"];

const AdminDashboard = () => {
  return (
    <DefaultLayout>
      <div className="max-w-6xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">B·∫£ng ƒëi·ªÅu khi·ªÉn Admin</h1>

        {/* Th·ªëng k√™ nhanh */}
        <div className="grid md:grid-cols-4 gap-6 mb-10">
          <Card>
            <CardHeader>
              <CardTitle>T√°c gi·∫£</CardTitle>
            </CardHeader>
            <CardContent className="flex items-center justify-between">
              <Users className="w-8 h-8 text-blue-500" />
              <span className="text-xl font-bold">{roleStats[0].value}</span>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Reviewer</CardTitle>
            </CardHeader>
            <CardContent className="flex items-center justify-between">
              <UserCheck className="w-8 h-8 text-green-500" />
              <span className="text-xl font-bold">{roleStats[1].value}</span>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Ban t·ªï ch·ª©c</CardTitle>
            </CardHeader>
            <CardContent className="flex items-center justify-between">
              <UserCog className="w-8 h-8 text-yellow-500" />
              <span className="text-xl font-bold">{roleStats[2].value}</span>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Admin</CardTitle>
            </CardHeader>
            <CardContent className="flex items-center justify-between">
              <Settings className="w-8 h-8 text-red-500" />
              <span className="text-xl font-bold">{roleStats[3].value}</span>
            </CardContent>
          </Card>
        </div>

        {/* Bi·ªÉu ƒë·ªì ph√¢n b·ªï */}
        <Card className="mb-10">
          <CardHeader>
            <CardTitle>Ph√¢n b·ªï ng∆∞·ªùi d√πng theo vai tr√≤</CardTitle>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <PieChart>
                <Pie
                  data={roleStats}
                  cx="50%"
                  cy="50%"
                  outerRadius={100}
                  label
                  dataKey="value"
                >
                  {roleStats.map((entry, index) => (
                    <Cell
                      key={`cell-${index}`}
                      fill={COLORS[index % COLORS.length]}
                    />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        {/* Li√™n k·∫øt nhanh */}
        <div className="flex gap-4">
          <Link to="/admin/users">
            <Button>üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng</Button>
          </Link>
          <Link to="/admin/settings">
            <Button variant="secondary">‚öôÔ∏è C√†i ƒë·∫∑t h·ªá th·ªëng</Button>
          </Link>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default AdminDashboard;

// frontend/src/pages/admin/settings.jsx
import React, { useState } from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Calendar, Mail, Database } from "lucide-react";

const AdminSettings = () => {
  const [form, setForm] = useState({
    deadlineSubmit: "2025-10-15",
    deadlineReview: "2025-11-01",
    smtpHost: "smtp.example.com",
    smtpPort: "587",
    smtpUser: "admin@example.com",
    smtpPass: "",
  });

  const [message, setMessage] = useState("");

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSave = () => {
    console.log("üíæ C√†i ƒë·∫∑t h·ªá th·ªëng:", form);
    setMessage("‚úÖ C√†i ƒë·∫∑t ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!");
  };

  const handleBackup = () => {
    console.log("üì¶ Sao l∆∞u d·ªØ li·ªáu");
    alert("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c sao l∆∞u!");
  };

  const handleRestore = () => {
    console.log("‚ôªÔ∏è Kh√¥i ph·ª•c d·ªØ li·ªáu");
    alert("‚ö†Ô∏è D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c kh√¥i ph·ª•c!");
  };

  return (
    <DefaultLayout>
      <div className="max-w-4xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">C√†i ƒë·∫∑t h·ªá th·ªëng</h1>

        {message && (
          <div className="mb-6 p-3 bg-green-50 text-green-700 rounded-lg text-sm">
            {message}
          </div>
        )}

        {/* Deadline */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>
              <Calendar className="w-5 h-5 inline mr-2" /> H·∫°n n·ªôp b√†i & ph·∫£n bi·ªán
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">
                H·∫°n n·ªôp b√†i
              </label>
              <input
                type="date"
                name="deadlineSubmit"
                value={form.deadlineSubmit}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">
                H·∫°n ph·∫£n bi·ªán
              </label>
              <input
                type="date"
                name="deadlineReview"
                value={form.deadlineReview}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
          </CardContent>
        </Card>

        {/* Email */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>
              <Mail className="w-5 h-5 inline mr-2" /> C·∫•u h√¨nh Email (SMTP)
            </CardTitle>
          </CardHeader>
          <CardContent className="grid md:grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-medium mb-2">SMTP Host</label>
              <input
                type="text"
                name="smtpHost"
                value={form.smtpHost}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">SMTP Port</label>
              <input
                type="text"
                name="smtpPort"
                value={form.smtpPort}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">SMTP User</label>
              <input
                type="text"
                name="smtpUser"
                value={form.smtpUser}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">SMTP Password</label>
              <input
                type="password"
                name="smtpPass"
                value={form.smtpPass}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
          </CardContent>
        </Card>

        {/* Backup & Restore */}
        <Card>
          <CardHeader>
            <CardTitle>
              <Database className="w-5 h-5 inline mr-2" /> Sao l∆∞u & Kh√¥i ph·ª•c
              d·ªØ li·ªáu
            </CardTitle>
          </CardHeader>
          <CardContent className="flex gap-4">
            <Button onClick={handleBackup}>üì¶ Sao l∆∞u</Button>
            <Button variant="destructive" onClick={handleRestore}>
              ‚ôªÔ∏è Kh√¥i ph·ª•c
            </Button>
          </CardContent>
        </Card>

        <div className="flex justify-end mt-6">
          <Button onClick={handleSave}>üíæ L∆∞u c√†i ƒë·∫∑t</Button>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default AdminSettings;

// frontend/src/pages/profile.jsx
import React, { useState } from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const ProfilePage = () => {
  const [form, setForm] = useState({
    name: "Nguy·ªÖn VƒÉn A",
    email: "user@example.com",
    phone: "0123456789",
    organization: "ƒê·∫°i h·ªçc B√°ch Khoa",
    field: "Tr√≠ tu·ªá nh√¢n t·∫°o",
    password: "",
    newPassword: "",
  });

  const [message, setMessage] = useState("");

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSave = () => {
    console.log("üíæ L∆∞u h·ªì s∆°:", form);
    setMessage("‚úÖ H·ªì s∆° c√° nh√¢n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!");
  };

  return (
    <DefaultLayout>
      <div className="max-w-3xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">H·ªì s∆° c√° nh√¢n</h1>

        {message && (
          <div className="mb-6 p-3 bg-green-50 text-green-700 rounded-lg text-sm">
            {message}
          </div>
        )}

        <Card className="mb-8">
          <CardHeader>
            <CardTitle>Th√¥ng tin c√° nh√¢n</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">H·ªç t√™n</label>
              <input
                type="text"
                name="name"
                value={form.name}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">Email</label>
              <input
                type="email"
                name="email"
                value={form.email}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">S·ªë ƒëi·ªán tho·∫°i</label>
              <input
                type="text"
                name="phone"
                value={form.phone}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">T·ªï ch·ª©c</label>
              <input
                type="text"
                name="organization"
                value={form.organization}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">Ng√†nh nghi√™n c·ª©u</label>
              <input
                type="text"
                name="field"
                value={form.field}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>ƒê·ªïi m·∫≠t kh·∫©u</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">M·∫≠t kh·∫©u hi·ªán t·∫°i</label>
              <input
                type="password"
                name="password"
                value={form.password}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">M·∫≠t kh·∫©u m·ªõi</label>
              <input
                type="password"
                name="newPassword"
                value={form.newPassword}
                onChange={handleChange}
                className="w-full border rounded-lg px-3 py-2"
              />
            </div>
          </CardContent>
        </Card>

        <div className="flex justify-end mt-6">
          <Button onClick={handleSave}>üíæ L∆∞u thay ƒë·ªïi</Button>
        </div>
      </div>
    </DefaultLayout>
  );
};

export default ProfilePage;

// frontend/src/pages/notifications.jsx
import React, { useState } from "react";
import DefaultLayout from "@/components/layout/DefaultLayout";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Bell } from "lucide-react";

// üîπ Dummy data
const notificationsData = [
  {
    id: 1,
    type: "review",
    message: "B√†i b√°o #12 ƒë√£ c√≥ k·∫øt qu·∫£ ph·∫£n bi·ªán: Y√™u c·∫ßu s·ª≠a.",
    date: "2025-09-15",
  },
  {
    id: 2,
    type: "schedule",
    message: "L·ªãch tr√¨nh b√°o c√°o c·ªßa b·∫°n ƒë√£ thay ƒë·ªïi: Ph√≤ng A101, 9h00.",
    date: "2025-09-18",
  },
  {
    id: 3,
    type: "general",
    message: "Ban t·ªï ch·ª©c th√¥ng b√°o: Gia h·∫°n h·∫°n n·ªôp b√†i ƒë·∫øn 15/10/2025.",
    date: "2025-09-20",
  },
];

const NotificationsPage = () => {
  const [notifications] = useState(notificationsData);

  return (
    <DefaultLayout>
      <div className="max-w-4xl mx-auto py-10 px-4">
        <h1 className="text-3xl font-bold mb-8">Th√¥ng b√°o</h1>

        {notifications.length === 0 ? (
          <p className="text-gray-500">Kh√¥ng c√≥ th√¥ng b√°o n√†o.</p>
        ) : (
          <div className="space-y-4">
            {notifications.map((n) => (
              <Card key={n.id}>
                <CardHeader>
                  <CardTitle className="flex items-center">
                    <Bell className="w-5 h-5 mr-2 text-blue-500" />
                    {n.type === "review" && "K·∫øt qu·∫£ ph·∫£n bi·ªán"}
                    {n.type === "schedule" && "L·ªãch tr√¨nh"}
                    {n.type === "general" && "Th√¥ng b√°o chung"}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-700">{n.message}</p>
                  <p className="text-xs text-gray-500 mt-2">{n.date}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        )}
      </div>
    </DefaultLayout>
  );
};

export default NotificationsPage;

// frontend/src/components/pageLoader.jsx
import { Loader2 } from "lucide-react";

export default function PageLoader() {
  return (
    <div className="fixed inset-0 flex flex-col items-center justify-center bg-gradient-to-br from-white/80 to-blue-50/80 backdrop-blur-sm z-50">
      <Loader2 className="w-12 h-12 animate-spin text-blue-600 mb-3 drop-shadow-lg" />
      <p className="text-sm font-medium text-blue-700 animate-pulse">
        ƒêang t·∫£i d·ªØ li·ªáu...
      </p>
    </div>
  );
}

// frontend/package.json
{
  "name": "my-app",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.13",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.541.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-router-dom": "^7.9.1",
    "recharts": "^3.2.1",
    "tailwind-merge": "^3.3.1",
    "tailwind-variants": "^2.1.0",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "@eslint/js": "^9.33.0",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.0",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.33.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.17",
    "vite": "^7.1.2"
  }
}
