import React, { useState } from "react";
import {
  Calendar,
  Users,
  FileText,
  Award,
  Clock,
  MapPin,
  Star,
  ChevronRight,
} from "lucide-react";
import Navbar from "../components/Navbar";
import Footer from "../components/footer";

const HomePage = () => {
  const [activeTab, setActiveTab] = useState("overview");

  const stats = [
    {
      label: "B√†i b√°o ƒë√£ nh·∫≠n",
      value: "1,247",
      icon: FileText,
      color: "bg-blue-500",
    },
    {
      label: "T√°c gi·∫£ tham gia",
      value: "892",
      icon: Users,
      color: "bg-green-500",
    },
    {
      label: "Ph·∫£n bi·ªán vi√™n",
      value: "156",
      icon: Star,
      color: "bg-purple-500",
    },
    { label: "Ng√†y c√≤n l·∫°i", value: "45", icon: Clock, color: "bg-red-500" },
  ];

  const timeline = [
    { date: "15/12/2024", title: "H·∫°n cu·ªëi n·ªôp b√†i", status: "completed" },
    {
      date: "20/01/2025",
      title: "Th√¥ng b√°o k·∫øt qu·∫£ ph·∫£n bi·ªán",
      status: "active",
    },
    { date: "15/02/2025", title: "H·∫°n n·ªôp b√†i s·ª≠a ƒë·ªïi", status: "upcoming" },
    { date: "01/03/2025", title: "Khai m·∫°c h·ªôi ngh·ªã", status: "upcoming" },
  ];

  const news = [
    {
      id: 1,
      title: "Th√¥ng b√°o gia h·∫°n n·ªôp b√†i b√°o ƒë·∫øn 20/12/2024",
      excerpt:
        "Do nhi·ªÅu y√™u c·∫ßu t·ª´ c·ªông ƒë·ªìng nghi√™n c·ª©u, ban t·ªï ch·ª©c quy·∫øt ƒë·ªãnh gia h·∫°n th·ªùi gian n·ªôp b√†i...",
      date: "10/12/2024",
      category: "Th√¥ng b√°o quan tr·ªçng",
    },
    {
      id: 2,
      title: "Danh s√°ch di·ªÖn gi·∫£ ch√≠nh ƒë√£ ƒë∆∞·ª£c c√¥ng b·ªë",
      excerpt:
        "Ch√∫ng t√¥i vinh d·ª± gi·ªõi thi·ªáu c√°c chuy√™n gia h√†ng ƒë·∫ßu s·∫Ω tham gia h·ªôi ngh·ªã nƒÉm nay...",
      date: "05/12/2024",
      category: "Tin t·ª©c",
    },
    {
      id: 3,
      title: "H∆∞·ªõng d·∫´n chu·∫©n b·ªã b√†i b√°o theo template m·ªõi",
      excerpt:
        "Template m·ªõi ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v·ªõi c√°c y√™u c·∫ßu v·ªÅ ƒë·ªãnh d·∫°ng v√† c·∫•u tr√∫c b√†i b√°o...",
      date: "01/12/2024",
      category: "H∆∞·ªõng d·∫´n",
    },
  ];

  const speakers = [
    {
      name: "TS. Nguy·ªÖn VƒÉn An",
      title: "Gi√°m ƒë·ªëc Vi·ªán AI Qu·ªëc gia",
      topic: "T∆∞∆°ng lai c·ªßa AI trong gi√°o d·ª•c",
      avatar: "üë®‚Äçüéì",
    },
    {
      name: "PGS.TS. Tr·∫ßn Th·ªã B√¨nh",
      title: "Tr∆∞·ªüng khoa CNTT - ƒêH B√°ch Khoa",
      topic: "Blockchain v√† ·ª©ng d·ª•ng th·ª±c t·∫ø",
      avatar: "üë©‚Äçüè´",
    },
    {
      name: "TS. L√™ Ho√†ng C∆∞·ªùng",
      title: "Chuy√™n gia An ninh m·∫°ng",
      topic: "Cybersecurity trong k·ª∑ nguy√™n s·ªë",
      avatar: "üë®‚Äçüíª",
    },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      {/* Header */}
      <Navbar />

      {/* Hero Section */}
      <section className="relative py-20 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-blue-600/10 to-purple-600/10"></div>
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="inline-flex items-center bg-blue-100 text-blue-800 text-sm font-medium px-4 py-2 rounded-full mb-6">
            üéØ H·∫°n n·ªôp b√†i: 20/12/2024
          </div>

          <h1 className="text-5xl md:text-6xl font-bold text-gray-900 mb-6">
            H·ªôi Ngh·ªã Khoa H·ªçc
            <span className="block text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">
              Qu·ªëc T·∫ø 2025
            </span>
          </h1>

          <p className="text-xl text-gray-600 mb-8 max-w-3xl mx-auto">
            N·ªÅn t·∫£ng h√†ng ƒë·∫ßu k·∫øt n·ªëi c√°c nh√† nghi√™n c·ª©u, chia s·∫ª ki·∫øn th·ª©c v√†
            th√∫c ƒë·∫©y s·ª± ƒë·ªïi m·ªõi trong lƒ©nh v·ª±c c√¥ng ngh·ªá th√¥ng tin v√† khoa h·ªçc
            m√°y t√≠nh.
          </p>

          <div className="flex flex-col sm:flex-row items-center justify-center gap-4 mb-12">
            <button className="bg-gradient-to-r from-blue-600 to-blue-700 text-white px-8 py-4 rounded-xl hover:shadow-lg transform hover:-translate-y-1 transition-all duration-200 font-semibold">
              N·ªôp b√†i b√°o ngay
            </button>
            <button className="border border-gray-300 text-gray-700 px-8 py-4 rounded-xl hover:bg-gray-50 transition-colors font-semibold">
              T·∫£i template
            </button>
          </div>

          {/* Quick Info */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
            <div className="flex items-center justify-center space-x-3">
              <Calendar className="w-6 h-6 text-blue-600" />
              <span className="text-gray-700 font-medium">
                1-3 Th√°ng 3, 2025
              </span>
            </div>
            <div className="flex items-center justify-center space-x-3">
              <MapPin className="w-6 h-6 text-blue-600" />
              <span className="text-gray-700 font-medium">
                TP. H·ªì Ch√≠ Minh, Vi·ªát Nam
              </span>
            </div>
            <div className="flex items-center justify-center space-x-3">
              <Users className="w-6 h-6 text-blue-600" />
              <span className="text-gray-700 font-medium">
                1000+ Tham d·ª± vi√™n
              </span>
            </div>
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-16 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {stats.map((stat, index) => (
              <div key={index} className="relative group">
                <div className="absolute inset-0 bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl opacity-0 group-hover:opacity-10 transition-opacity duration-300"></div>
                <div className="relative bg-white rounded-2xl p-6 border border-gray-100 shadow-sm hover:shadow-lg transition-shadow duration-300">
                  <div className="flex items-center justify-between mb-4">
                    <div
                      className={`w-12 h-12 rounded-xl ${stat.color} flex items-center justify-center text-white`}
                    >
                      <stat.icon className="w-6 h-6" />
                    </div>
                    <ChevronRight className="w-5 h-5 text-gray-400 group-hover:text-blue-600 transition-colors" />
                  </div>
                  <h3 className="text-3xl font-bold text-gray-900 mb-2">
                    {stat.value}
                  </h3>
                  <p className="text-gray-600 font-medium">{stat.label}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Timeline Section */}
      <section className="py-16 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              L·ªãch tr√¨nh quan tr·ªçng
            </h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              Theo d√µi c√°c m·ªëc th·ªùi gian quan tr·ªçng ƒë·ªÉ kh√¥ng b·ªè l·ª° c∆° h·ªôi tham
              gia h·ªôi ngh·ªã
            </p>
          </div>

          <div className="relative">
            <div className="absolute left-1/2 transform -translate-x-px h-full w-0.5 bg-gray-300"></div>
            <div className="space-y-12">
              {timeline.map((item, index) => (
                <div key={index} className="relative flex items-center">
                  <div className="flex-1 text-right pr-8">
                    {index % 2 === 0 && (
                      <div>
                        <h3 className="text-lg font-semibold text-gray-900">
                          {item.title}
                        </h3>
                        <p className="text-gray-600">{item.date}</p>
                      </div>
                    )}
                  </div>

                  <div
                    className={`relative z-10 w-4 h-4 rounded-full border-4 ${
                      item.status === "completed"
                        ? "bg-green-500 border-green-200"
                        : item.status === "active"
                        ? "bg-blue-500 border-blue-200"
                        : "bg-gray-300 border-gray-200"
                    }`}
                  ></div>

                  <div className="flex-1 pl-8">
                    {index % 2 === 1 && (
                      <div>
                        <h3 className="text-lg font-semibold text-gray-900">
                          {item.title}
                        </h3>
                        <p className="text-gray-600">{item.date}</p>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Speakers Section */}
      <section className="py-16 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              Di·ªÖn gi·∫£ ch√≠nh
            </h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              G·∫∑p g·ª° c√°c chuy√™n gia h√†ng ƒë·∫ßu s·∫Ω chia s·∫ª nh·ªØng nghi√™n c·ª©u ti√™n
              phong
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {speakers.map((speaker, index) => (
              <div key={index} className="text-center group">
                <div className="relative mb-6">
                  <div className="w-32 h-32 mx-auto rounded-full bg-gradient-to-br from-blue-100 to-purple-100 flex items-center justify-center text-4xl group-hover:shadow-lg transition-shadow duration-300">
                    {speaker.avatar}
                  </div>
                </div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">
                  {speaker.name}
                </h3>
                <p className="text-blue-600 font-medium mb-2">
                  {speaker.title}
                </p>
                <p className="text-gray-600 text-sm">{speaker.topic}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* News Section */}
      <section className="py-16 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center mb-12">
            <div>
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                Tin t·ª©c & Th√¥ng b√°o
              </h2>
              <p className="text-gray-600">
                C·∫≠p nh·∫≠t th√¥ng tin m·ªõi nh·∫•t v·ªÅ h·ªôi ngh·ªã
              </p>
            </div>
            <button className="text-blue-600 hover:text-blue-700 font-medium flex items-center">
              Xem t·∫•t c·∫£ <ChevronRight className="ml-1 w-4 h-4" />
            </button>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {news.map((article) => (
              <article
                key={article.id}
                className="bg-white rounded-2xl p-6 border border-gray-100 hover:shadow-lg transition-shadow duration-300 cursor-pointer group"
              >
                <div className="flex items-center justify-between mb-4">
                  <span className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                    {article.category}
                  </span>
                  <span className="text-sm text-gray-500">{article.date}</span>
                </div>

                <h3 className="text-lg font-semibold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors">
                  {article.title}
                </h3>

                <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                  {article.excerpt}
                </p>

                <button className="text-blue-600 hover:text-blue-700 font-medium text-sm flex items-center">
                  ƒê·ªçc th√™m <ChevronRight className="ml-1 w-3 h-3" />
                </button>
              </article>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-blue-600 to-purple-600">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl md:text-4xl font-bold text-white mb-6">
            S·∫µn s√†ng tham gia h·ªôi ngh·ªã?
          </h2>
          <p className="text-xl text-blue-100 mb-8 max-w-2xl mx-auto">
            ƒêƒÉng k√Ω ngay h√¥m nay ƒë·ªÉ kh√¥ng b·ªè l·ª° c∆° h·ªôi k·∫øt n·ªëi v·ªõi c·ªông ƒë·ªìng
            nghi√™n c·ª©u h√†ng ƒë·∫ßu
          </p>
          <div className="flex flex-col sm:flex-row items-center justify-center gap-4">
            <button className="bg-white text-blue-600 px-8 py-4 rounded-xl hover:bg-gray-100 transition-colors font-semibold">
              ƒêƒÉng k√Ω tham d·ª±
            </button>
            <button className="border border-white text-white px-8 py-4 rounded-xl hover:bg-white/10 transition-colors font-semibold">
              T·∫£i brochure
            </button>
          </div>
        </div>
      </section>

      {/* Footer */}
      <Footer />
    </div>
  );
};

export default HomePage;
